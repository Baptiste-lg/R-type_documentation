<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classSpawnSystem" kind="class" language="C++" prot="public">
    <compoundname>SpawnSystem</compoundname>
    <basecompoundref refid="classISystem" prot="public" virt="non-virtual">ISystem&lt; Spawner, Position &gt;</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classSpawnSystem_1a327c06e8ed83549b3a3ec77bfb01caf5" prot="private" static="no" mutable="no">
        <type>float &amp;</type>
        <definition>float&amp; SpawnSystem::deltaTime</definition>
        <argsstring></argsstring>
        <name>deltaTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/System/SpawnSystem.hpp" line="46" column="11" bodyfile="include/System/SpawnSystem.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSpawnSystem_1a92038f0b6e7aee7f14e094ed897a60a1" prot="private" static="no" mutable="no">
        <type><ref refid="classAssetManager" kindref="compound">AssetManager</ref> &amp;</type>
        <definition>AssetManager&amp; SpawnSystem::assetManager</definition>
        <argsstring></argsstring>
        <name>assetManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/System/SpawnSystem.hpp" line="47" column="18" bodyfile="include/System/SpawnSystem.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSpawnSystem_1a2dc8535657778d0b639388e8b28ff37b" prot="private" static="no" mutable="no">
        <type><ref refid="classRegistry" kindref="compound">Registry</ref> &amp;</type>
        <definition>Registry&amp; SpawnSystem::registry</definition>
        <argsstring></argsstring>
        <name>registry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/System/SpawnSystem.hpp" line="48" column="14" bodyfile="include/System/SpawnSystem.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classSpawnSystem_1ab8a3ffc7ff1564c1ac7722d96449babe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>std::string const</type>
        <definition>std::string const SpawnSystem::getSystemName</definition>
        <argsstring>() override</argsstring>
        <name>getSystemName</name>
        <reimplements refid="classISystemBase_1a68bd336682af94d8e0fc5a191b83e616">getSystemName</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/System/SpawnSystem.hpp" line="51" column="23" bodyfile="include/System/SpawnSystem.hpp" bodystart="51" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classSpawnSystem_1a7a862e52c5dc2e2a68c63bd6fcadccc2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SpawnSystem::SpawnSystem</definition>
        <argsstring>(float &amp;deltaTime, AssetManager &amp;assetManager, Registry &amp;registry)</argsstring>
        <name>SpawnSystem</name>
        <param>
          <type>float &amp;</type>
          <declname>deltaTime</declname>
        </param>
        <param>
          <type><ref refid="classAssetManager" kindref="compound">AssetManager</ref> &amp;</type>
          <declname>assetManager</declname>
        </param>
        <param>
          <type><ref refid="classRegistry" kindref="compound">Registry</ref> &amp;</type>
          <declname>registry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/System/SpawnSystem.hpp" line="54" column="5" bodyfile="include/System/SpawnSystem.hpp" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classSpawnSystem_1a6b50886e7bc30b3ce183e6fd25dc6178" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SpawnSystem::operator()</definition>
        <argsstring>(entity_t entity, sparse_array&lt; Spawner &gt; &amp;spawners, sparse_array&lt; Position &gt; &amp;positions) override</argsstring>
        <name>operator()</name>
        <param>
          <type>entity_t</type>
          <declname>entity</declname>
        </param>
        <param>
          <type><ref refid="classsparse__array" kindref="compound">sparse_array</ref>&lt; <ref refid="structSpawner" kindref="compound">Spawner</ref> &gt; &amp;</type>
          <declname>spawners</declname>
        </param>
        <param>
          <type><ref refid="classsparse__array" kindref="compound">sparse_array</ref>&lt; <ref refid="structPosition" kindref="compound">Position</ref> &gt; &amp;</type>
          <declname>positions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/System/SpawnSystem.hpp" line="55" column="10" bodyfile="include/System/SpawnSystem.hpp" bodystart="55" bodyend="85"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>SpawnSystem</label>
        <link refid="classSpawnSystem"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>ISystem&lt; Spawner, Position &gt;</label>
        <link refid="classISystem"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>ISystemBase</label>
        <link refid="classISystemBase"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>SpawnSystem</label>
        <link refid="classSpawnSystem"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>ISystem&lt; Spawner, Position &gt;</label>
        <link refid="classISystem"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>ISystemBase</label>
        <link refid="classISystemBase"/>
      </node>
    </collaborationgraph>
    <location file="include/System/SpawnSystem.hpp" line="44" column="1" bodyfile="include/System/SpawnSystem.hpp" bodystart="44" bodyend="86"/>
    <listofallmembers>
      <member refid="classSpawnSystem_1a92038f0b6e7aee7f14e094ed897a60a1" prot="private" virt="non-virtual"><scope>SpawnSystem</scope><name>assetManager</name></member>
      <member refid="classSpawnSystem_1a327c06e8ed83549b3a3ec77bfb01caf5" prot="private" virt="non-virtual"><scope>SpawnSystem</scope><name>deltaTime</name></member>
      <member refid="classSpawnSystem_1ab8a3ffc7ff1564c1ac7722d96449babe" prot="public" virt="virtual"><scope>SpawnSystem</scope><name>getSystemName</name></member>
      <member refid="classSpawnSystem_1a6b50886e7bc30b3ce183e6fd25dc6178" prot="public" virt="non-virtual"><scope>SpawnSystem</scope><name>operator()</name></member>
      <member refid="classISystem_1a31573ab1dbe256ad82453452bc1a76b8" prot="public" virt="pure-virtual" ambiguityscope="ISystem&lt; Spawner, Position &gt;::"><scope>SpawnSystem</scope><name>operator()</name></member>
      <member refid="classISystemBase_1a15450364e9f21ebae6e2633eef35d7d5" prot="public" virt="virtual"><scope>SpawnSystem</scope><name>PostUpdate</name></member>
      <member refid="classSpawnSystem_1a2dc8535657778d0b639388e8b28ff37b" prot="private" virt="non-virtual"><scope>SpawnSystem</scope><name>registry</name></member>
      <member refid="classSpawnSystem_1a7a862e52c5dc2e2a68c63bd6fcadccc2" prot="public" virt="non-virtual"><scope>SpawnSystem</scope><name>SpawnSystem</name></member>
      <member refid="classISystem_1a8b403989cf1780ab99f91272b3098648" prot="public" virt="virtual"><scope>SpawnSystem</scope><name>~ISystem</name></member>
      <member refid="classISystemBase_1ae71b84b72f1d4eab3f8acdf50d5ee540" prot="public" virt="virtual"><scope>SpawnSystem</scope><name>~ISystemBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
