<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classzipper" kind="class" language="C++" prot="public">
    <compoundname>zipper</compoundname>
    <templateparamlist>
      <param>
        <type>class...</type>
        <declname>Containers</declname>
        <defname>Containers</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classzipper_1a0388eadd3746bb1680353de4ba66873d" prot="public" static="no">
        <type><ref refid="classzipper__iterator" kindref="compound">zipper_iterator</ref>&lt; Containers... &gt;</type>
        <definition>using zipper&lt; Containers &gt;::iterator =  zipper_iterator&lt;Containers...&gt;</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Zipper.hpp" line="53" column="5" bodyfile="include/Zipper.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classzipper_1ad5d47c2e040ac678aadb9a963ab4959a" prot="public" static="no">
        <type>typename iterator::iterator_tuple</type>
        <definition>using zipper&lt; Containers &gt;::iterator_tuple =  typename iterator::iterator_tuple</definition>
        <argsstring></argsstring>
        <name>iterator_tuple</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Zipper.hpp" line="54" column="5" bodyfile="include/Zipper.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classzipper_1af573363b69fa88ef7f0ce447e877fe5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class zipper_iterator&lt; Containers... &gt;</definition>
        <argsstring></argsstring>
        <name>zipper_iterator&lt; Containers... &gt;</name>
        <param>
          <type><ref refid="classzipper__iterator" kindref="compound">zipper_iterator</ref>&lt; Containers... &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Zipper.hpp" line="1" column="0" bodyfile="include/Zipper.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classzipper_1aa430a568cf9f13eda5af0eb03b7e4a4c" prot="private" static="no" mutable="no">
        <type>iterator_tuple</type>
        <definition>iterator_tuple zipper&lt; Containers &gt;::_begin</definition>
        <argsstring></argsstring>
        <name>_begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Zipper.hpp" line="78" column="20" bodyfile="include/Zipper.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classzipper_1ada175d1e6d2d2644ccff021ebfe6baa4" prot="private" static="no" mutable="no">
        <type>iterator_tuple</type>
        <definition>iterator_tuple zipper&lt; Containers &gt;::_end</definition>
        <argsstring></argsstring>
        <name>_end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Zipper.hpp" line="79" column="20" bodyfile="include/Zipper.hpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classzipper_1a61c1ecb161547d9985e2070a184ba8dc" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t zipper&lt; Containers &gt;::_size</definition>
        <argsstring></argsstring>
        <name>_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Zipper.hpp" line="80" column="12" bodyfile="include/Zipper.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classzipper_1a4e5c44163467e004c0a74338091bd36f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>zipper&lt; Containers &gt;::zipper</definition>
        <argsstring>(Containers &amp;... cs)</argsstring>
        <name>zipper</name>
        <param>
          <type>Containers &amp;...</type>
          <declname>cs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Zipper.hpp" line="57" column="5" bodyfile="include/Zipper.hpp" bodystart="57" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classzipper_1a3d4c5f845c9d972cda61b300c56f0faa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classzipper__iterator" kindref="compound">iterator</ref></type>
        <definition>iterator zipper&lt; Containers &gt;::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Zipper.hpp" line="63" column="14" bodyfile="include/Zipper.hpp" bodystart="63" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classzipper_1ab3aea3f5d15ccd3765e4670b6ca7e227" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classzipper__iterator" kindref="compound">iterator</ref></type>
        <definition>iterator zipper&lt; Containers &gt;::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Zipper.hpp" line="67" column="14" bodyfile="include/Zipper.hpp" bodystart="67" bodyend="69"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classzipper_1a170ce0dd7971f3e97f66a5d680bb14e1" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t zipper&lt; Containers &gt;::_compute_size</definition>
        <argsstring>(Containers &amp;... containers)</argsstring>
        <name>_compute_size</name>
        <param>
          <type>Containers &amp;...</type>
          <declname>containers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Zipper.hpp" line="73" column="19" bodyfile="include/Zipper.hpp" bodystart="73" bodyend="75"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/Zipper.hpp" line="51" column="1" bodyfile="include/Zipper.hpp" bodystart="51" bodyend="81"/>
    <listofallmembers>
      <member refid="classzipper_1aa430a568cf9f13eda5af0eb03b7e4a4c" prot="private" virt="non-virtual"><scope>zipper</scope><name>_begin</name></member>
      <member refid="classzipper_1a170ce0dd7971f3e97f66a5d680bb14e1" prot="private" virt="non-virtual"><scope>zipper</scope><name>_compute_size</name></member>
      <member refid="classzipper_1ada175d1e6d2d2644ccff021ebfe6baa4" prot="private" virt="non-virtual"><scope>zipper</scope><name>_end</name></member>
      <member refid="classzipper_1a61c1ecb161547d9985e2070a184ba8dc" prot="private" virt="non-virtual"><scope>zipper</scope><name>_size</name></member>
      <member refid="classzipper_1a3d4c5f845c9d972cda61b300c56f0faa" prot="public" virt="non-virtual"><scope>zipper</scope><name>begin</name></member>
      <member refid="classzipper_1ab3aea3f5d15ccd3765e4670b6ca7e227" prot="public" virt="non-virtual"><scope>zipper</scope><name>end</name></member>
      <member refid="classzipper_1a0388eadd3746bb1680353de4ba66873d" prot="public" virt="non-virtual"><scope>zipper</scope><name>iterator</name></member>
      <member refid="classzipper_1ad5d47c2e040ac678aadb9a963ab4959a" prot="public" virt="non-virtual"><scope>zipper</scope><name>iterator_tuple</name></member>
      <member refid="classzipper_1a4e5c44163467e004c0a74338091bd36f" prot="public" virt="non-virtual"><scope>zipper</scope><name>zipper</name></member>
      <member refid="classzipper_1af573363b69fa88ef7f0ce447e877fe5e" prot="public" virt="non-virtual"><scope>zipper</scope><name>zipper_iterator&lt; Containers... &gt;</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
