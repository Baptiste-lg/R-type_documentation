<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="ServerMain_8cpp" kind="file" language="C++">
    <compoundname>ServerMain.cpp</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="ServerMain_8cpp_1a2d9999ae2c46cc63b01991d74e515c66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initializeGameServerSystems</definition>
        <argsstring>(Registry &amp;registry, sf::RenderWindow &amp;window, AssetManager &amp;assetManager, float &amp;elapsed_time)</argsstring>
        <name>initializeGameServerSystems</name>
        <param>
          <type><ref refid="classRegistry" kindref="compound">Registry</ref> &amp;</type>
          <declname>registry</declname>
        </param>
        <param>
          <type>sf::RenderWindow &amp;</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="classAssetManager" kindref="compound">AssetManager</ref> &amp;</type>
          <declname>assetManager</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>elapsed_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ServerMain.cpp</para>
<para>This file houses the primary functions required for initializing and running the server-side game systems. It encapsulates the setup for the game server systems, database, configurations, and the initial loading screen.</para>
<para>Functions:</para>
<para><itemizedlist>
<listitem><para>initializeGameServerSystems(Registry &amp;registry, sf::RenderWindow &amp;window, AssetManager &amp;assetManager, float &amp;elapsed_time) This function encapsulates the process of initializing the game server systems by registering server systems with the game&apos;s <ref refid="classRegistry" kindref="compound">Registry</ref>, window, asset manager, and tracking the elapsed time.</para>
</listitem><listitem><para>initializeDatabaseAndConfig(Config &amp;config, Database &amp;database, GUI &amp;gui) This function encapsulates the process of initializing the game&apos;s configuration and database by loading configurations from files and validating the database contents.</para>
</listitem><listitem><para>firstLoadingScreen(GUI &amp;gui, Database &amp;database, Registry &amp;registry, sf::RenderWindow &amp;window) This function encapsulates the initial loading screen setup, including creating the loading screen, setting up loading tasks, executing these tasks, and transitioning to the main game loop.</para>
</listitem></itemizedlist>
</para>
<para>Dependencies:</para>
<para><itemizedlist>
<listitem><para>&quot;ServerMain.hpp&quot; for the declarations of the initialization functions.</para>
</listitem><listitem><para>&quot;SceneParsing.hpp&quot; for parsing scene configurations.</para>
</listitem><listitem><para>&lt;iostream&gt; for standard I/O operations.</para>
</listitem><listitem><para>&lt;vector&gt; for std::vector.</para>
</listitem><listitem><para>&lt;functional&gt; for std::function.</para>
</listitem><listitem><para>&lt;SFML/Graphics.hpp&gt; for rendering and window management. </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ServerMain.cpp" line="43" column="6" bodyfile="src/ServerMain.cpp" bodystart="43" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="ServerMain_8cpp_1ac78b7058d15eae77b4bf87d4ba310034" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initializeDatabaseAndConfig</definition>
        <argsstring>(Config &amp;config, Database &amp;database, GUI &amp;gui)</argsstring>
        <name>initializeDatabaseAndConfig</name>
        <param>
          <type><ref refid="classConfig" kindref="compound">Config</ref> &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type><ref refid="classDatabase" kindref="compound">Database</ref> &amp;</type>
          <declname>database</declname>
        </param>
        <param>
          <type><ref refid="classGUI" kindref="compound">GUI</ref> &amp;</type>
          <declname>gui</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ServerMain.cpp" line="51" column="6" bodyfile="src/ServerMain.cpp" bodystart="51" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="ServerMain_8cpp_1afdea8fa4574ff786c1bc060f4400badc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void firstLoadingScreen</definition>
        <argsstring>(GUI &amp;gui, Database &amp;database, Registry &amp;registry, sf::RenderWindow &amp;window)</argsstring>
        <name>firstLoadingScreen</name>
        <param>
          <type><ref refid="classGUI" kindref="compound">GUI</ref> &amp;</type>
          <declname>gui</declname>
        </param>
        <param>
          <type><ref refid="classDatabase" kindref="compound">Database</ref> &amp;</type>
          <declname>database</declname>
        </param>
        <param>
          <type><ref refid="classRegistry" kindref="compound">Registry</ref> &amp;</type>
          <declname>registry</declname>
        </param>
        <param>
          <type>sf::RenderWindow &amp;</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ServerMain.cpp" line="61" column="6" bodyfile="src/ServerMain.cpp" bodystart="61" bodyend="79"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">**<sp/>EPITECH<sp/>PROJECT,<sp/>2024</highlight></codeline>
<codeline lineno="3"><highlight class="comment">**<sp/>Rtype</highlight></codeline>
<codeline lineno="4"><highlight class="comment">**<sp/>File<sp/>description:</highlight></codeline>
<codeline lineno="5"><highlight class="comment">**<sp/>ServerMain.cpp</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ServerMain.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SceneParsing.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initializeGameServerSystems(<ref refid="classRegistry" kindref="compound">Registry</ref><sp/>&amp;registry,<sp/>sf::RenderWindow<sp/>&amp;window,<sp/><ref refid="classAssetManager" kindref="compound">AssetManager</ref><sp/>&amp;assetManager,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>&amp;elapsed_time)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Register<sp/>components</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>registerServerSystem(registry,<sp/>window,<sp/>assetManager,<sp/>elapsed_time);</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initializeDatabaseAndConfig(<ref refid="classConfig" kindref="compound">Config</ref><sp/>&amp;config,<sp/><ref refid="classDatabase" kindref="compound">Database</ref><sp/>&amp;database,<sp/><ref refid="classGUI" kindref="compound">GUI</ref><sp/>&amp;gui)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>database.load(</highlight><highlight class="stringliteral">&quot;./config/Database.cfg&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>database.getNbBeatmaps();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>database.isBeatmapExist(i);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>database.print();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>config.load(</highlight><highlight class="stringliteral">&quot;config/game.cfg&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>config.print();</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>firstLoadingScreen(<ref refid="classGUI" kindref="compound">GUI</ref><sp/>&amp;gui,<sp/><ref refid="classDatabase" kindref="compound">Database</ref><sp/>&amp;database,<sp/><ref refid="classRegistry" kindref="compound">Registry</ref><sp/>&amp;registry,<sp/>sf::RenderWindow<sp/>&amp;window)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>gui.loadingScreenCreate();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>gui.setActive(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::function&lt;void(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;)&gt;&gt;<sp/>tasks;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>tasks.push_back([&amp;](</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;progress)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gui.menu.load(make_pair(gui.getWindow().getSize().x,<sp/>gui.getWindow().getSize().y),<sp/>database);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Call<sp/>the<sp/>function<sp/>to<sp/>execute<sp/>tasks<sp/>with<sp/>the<sp/>loading<sp/>screen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>executeLoadingTasks(gui,<sp/>tasks);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>window.clear();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Main<sp/>game<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/ServerMain.cpp"/>
  </compounddef>
</doxygen>
