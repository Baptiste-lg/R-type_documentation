<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classControlSystem" kind="class" language="C++" prot="public">
    <compoundname>ControlSystem</compoundname>
    <basecompoundref refid="classISystem" prot="public" virt="non-virtual">ISystem&lt; Position, Velocity, Controllable &gt;</basecompoundref>
    <includes refid="ControlSystem_8hpp" local="no">ControlSystem.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classControlSystem_1a913349e1df5f07aec19dbf7398785aaf" prot="private" static="no" mutable="no">
        <type>float &amp;</type>
        <definition>float&amp; ControlSystem::deltaTime</definition>
        <argsstring></argsstring>
        <name>deltaTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/System/ControlSystem.hpp" line="38" column="11" bodyfile="include/System/ControlSystem.hpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classControlSystem_1a6f4636035762d65d5cb36f29991ae08c" prot="private" static="no" mutable="no">
        <type><ref refid="classRegistry" kindref="compound">Registry</ref> &amp;</type>
        <definition>Registry&amp; ControlSystem::registry</definition>
        <argsstring></argsstring>
        <name>registry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/System/ControlSystem.hpp" line="39" column="14" bodyfile="include/System/ControlSystem.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classControlSystem_1ad936fb60ddce0b91a0b8aab7ef642bd3" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; entity_t, std::queue&lt; <ref refid="structEvent" kindref="compound">Event</ref> &gt; &gt;</type>
        <definition>std::unordered_map&lt;entity_t, std::queue&lt;Event&gt; &gt; ControlSystem::eventQueue</definition>
        <argsstring></argsstring>
        <name>eventQueue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/System/ControlSystem.hpp" line="40" column="24" bodyfile="include/System/ControlSystem.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classControlSystem_1a3d098933778c86b7628e93d4ed4674d3" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structEvent" kindref="compound">Event</ref> &gt;</type>
        <definition>std::vector&lt;Event&gt; ControlSystem::eventsToSend</definition>
        <argsstring></argsstring>
        <name>eventsToSend</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/System/ControlSystem.hpp" line="41" column="17" bodyfile="include/System/ControlSystem.hpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classControlSystem_1afa1deb89f1e5c13ec4545514ef90d562" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; entity_t, std::unordered_set&lt; char &gt; &gt;</type>
        <definition>std::unordered_map&lt;entity_t, std::unordered_set&lt;char&gt; &gt; ControlSystem::inputStates</definition>
        <argsstring></argsstring>
        <name>inputStates</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/System/ControlSystem.hpp" line="42" column="24" bodyfile="include/System/ControlSystem.hpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classControlSystem_1a1b23237a3b0b85ca34f009d6705da9b4" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; entity_t, std::unordered_set&lt; char &gt; &gt;</type>
        <definition>std::unordered_map&lt;entity_t, std::unordered_set&lt;char&gt; &gt; ControlSystem::lastInputStates</definition>
        <argsstring></argsstring>
        <name>lastInputStates</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/System/ControlSystem.hpp" line="43" column="24" bodyfile="include/System/ControlSystem.hpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classControlSystem_1a7810859d3eb60dc02349f53fd01549f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>std::string const</type>
        <definition>std::string const ControlSystem::getSystemName</definition>
        <argsstring>() override</argsstring>
        <name>getSystemName</name>
        <reimplements refid="classISystemBase_1a68bd336682af94d8e0fc5a191b83e616">getSystemName</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/System/ControlSystem.hpp" line="45" column="23" bodyfile="include/System/ControlSystem.hpp" bodystart="45" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classControlSystem_1a503d4175898c757edc99547c0c4d9668" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ControlSystem::ControlSystem</definition>
        <argsstring>(float &amp;deltaTime, Registry &amp;registry)</argsstring>
        <name>ControlSystem</name>
        <param>
          <type>float &amp;</type>
          <declname>deltaTime</declname>
        </param>
        <param>
          <type><ref refid="classRegistry" kindref="compound">Registry</ref> &amp;</type>
          <declname>registry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/System/ControlSystem.hpp" line="48" column="5" bodyfile="include/System/ControlSystem.hpp" bodystart="48" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classControlSystem_1a0f36ee64bd2bf93f44a4b19746518113" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ControlSystem::applyInputState</definition>
        <argsstring>(entity_t entity, const std::string &amp;serializedState)</argsstring>
        <name>applyInputState</name>
        <param>
          <type>entity_t</type>
          <declname>entity</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>serializedState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/System/ControlSystem.hpp" line="58" column="10" bodyfile="include/System/ControlSystem.hpp" bodystart="58" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classControlSystem_1aafc563138e02d39d0cee24c5c20bb770" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ControlSystem::operator()</definition>
        <argsstring>(entity_t entity, sparse_array&lt; Position &gt; &amp;positions, sparse_array&lt; Velocity &gt; &amp;velocities, sparse_array&lt; Controllable &gt; &amp;controllables) override</argsstring>
        <name>operator()</name>
        <param>
          <type>entity_t</type>
          <declname>entity</declname>
        </param>
        <param>
          <type><ref refid="classsparse__array" kindref="compound">sparse_array</ref>&lt; <ref refid="structPosition" kindref="compound">Position</ref> &gt; &amp;</type>
          <declname>positions</declname>
        </param>
        <param>
          <type><ref refid="classsparse__array" kindref="compound">sparse_array</ref>&lt; <ref refid="structVelocity" kindref="compound">Velocity</ref> &gt; &amp;</type>
          <declname>velocities</declname>
        </param>
        <param>
          <type><ref refid="classsparse__array" kindref="compound">sparse_array</ref>&lt; <ref refid="structControllable" kindref="compound">Controllable</ref> &gt; &amp;</type>
          <declname>controllables</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/System/ControlSystem.hpp" line="66" column="10" bodyfile="include/System/ControlSystem.hpp" bodystart="66" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classControlSystem_1ac49ee092a26f74ece2648301010681c3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string ControlSystem::serializeInputStates</definition>
        <argsstring>(entity_t entity, const std::unordered_set&lt; char &gt; &amp;states)</argsstring>
        <name>serializeInputStates</name>
        <param>
          <type>entity_t</type>
          <declname>entity</declname>
        </param>
        <param>
          <type>const std::unordered_set&lt; char &gt; &amp;</type>
          <declname>states</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/System/ControlSystem.hpp" line="127" column="17" bodyfile="include/System/ControlSystem.hpp" bodystart="127" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classControlSystem_1a6ec47344d722e1a0774f844af6f9ef40" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ControlSystem::updateInputState</definition>
        <argsstring>(entity_t entity, char input, bool isPressed)</argsstring>
        <name>updateInputState</name>
        <param>
          <type>entity_t</type>
          <declname>entity</declname>
        </param>
        <param>
          <type>char</type>
          <declname>input</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isPressed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/System/ControlSystem.hpp" line="134" column="10" bodyfile="include/System/ControlSystem.hpp" bodystart="134" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classControlSystem_1a37305c982f8f403838748638b00a2c62" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void ControlSystem::PostUpdate</definition>
        <argsstring>() override</argsstring>
        <name>PostUpdate</name>
        <reimplements refid="classISystemBase_1a15450364e9f21ebae6e2633eef35d7d5">PostUpdate</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/System/ControlSystem.hpp" line="148" column="10" bodyfile="include/System/ControlSystem.hpp" bodystart="148" bodyend="167"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="classControlSystem" kindref="compound">ControlSystem</ref> class</para>
<para>Inherits from <ref refid="classISystem" kindref="compound">ISystem</ref> interface. Handles controlling entities with <ref refid="structControllable" kindref="compound">Controllable</ref>, <ref refid="structPosition" kindref="compound">Position</ref>, <ref refid="structVelocity" kindref="compound">Velocity</ref>, and <ref refid="structGameConfig" kindref="compound">GameConfig</ref> components.</para>
<para>deltaTime: Reference to delta time value for frame rate independence. registry: Reference to global ECS registry. eventQueue: Queue of input events mapped to entities.</para>
<para>Constructor:<itemizedlist>
<listitem><para>Initializes event listener for player input events.</para>
</listitem></itemizedlist>
</para>
<para>operator():<itemizedlist>
<listitem><para>Entry point for system.</para>
</listitem><listitem><para>Checks for <ref refid="structControllable" kindref="compound">Controllable</ref>, <ref refid="structVelocity" kindref="compound">Velocity</ref>, and <ref refid="structGameConfig" kindref="compound">GameConfig</ref> components.</para>
</listitem><listitem><para>Applies player input events from queue to entity velocity.</para>
</listitem><listitem><para>Updates entity position based on velocity. </para>
</listitem></itemizedlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>ISystem&lt; Position, Velocity, Controllable &gt;</label>
        <link refid="classISystem"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>ISystemBase</label>
        <link refid="classISystemBase"/>
      </node>
      <node id="1">
        <label>ControlSystem</label>
        <link refid="classControlSystem"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>ISystem&lt; Position, Velocity, Controllable &gt;</label>
        <link refid="classISystem"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>ISystemBase</label>
        <link refid="classISystemBase"/>
      </node>
      <node id="1">
        <label>ControlSystem</label>
        <link refid="classControlSystem"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/System/ControlSystem.hpp" line="35" column="1" bodyfile="include/System/ControlSystem.hpp" bodystart="36" bodyend="170"/>
    <listofallmembers>
      <member refid="classControlSystem_1a0f36ee64bd2bf93f44a4b19746518113" prot="public" virt="non-virtual"><scope>ControlSystem</scope><name>applyInputState</name></member>
      <member refid="classControlSystem_1a503d4175898c757edc99547c0c4d9668" prot="public" virt="non-virtual"><scope>ControlSystem</scope><name>ControlSystem</name></member>
      <member refid="classControlSystem_1a913349e1df5f07aec19dbf7398785aaf" prot="private" virt="non-virtual"><scope>ControlSystem</scope><name>deltaTime</name></member>
      <member refid="classControlSystem_1ad936fb60ddce0b91a0b8aab7ef642bd3" prot="private" virt="non-virtual"><scope>ControlSystem</scope><name>eventQueue</name></member>
      <member refid="classControlSystem_1a3d098933778c86b7628e93d4ed4674d3" prot="private" virt="non-virtual"><scope>ControlSystem</scope><name>eventsToSend</name></member>
      <member refid="classControlSystem_1a7810859d3eb60dc02349f53fd01549f7" prot="public" virt="virtual"><scope>ControlSystem</scope><name>getSystemName</name></member>
      <member refid="classControlSystem_1afa1deb89f1e5c13ec4545514ef90d562" prot="private" virt="non-virtual"><scope>ControlSystem</scope><name>inputStates</name></member>
      <member refid="classControlSystem_1a1b23237a3b0b85ca34f009d6705da9b4" prot="private" virt="non-virtual"><scope>ControlSystem</scope><name>lastInputStates</name></member>
      <member refid="classControlSystem_1aafc563138e02d39d0cee24c5c20bb770" prot="public" virt="non-virtual"><scope>ControlSystem</scope><name>operator()</name></member>
      <member refid="classISystem_1a31573ab1dbe256ad82453452bc1a76b8" prot="public" virt="pure-virtual" ambiguityscope="ISystem&lt; Position, Velocity, Controllable &gt;::"><scope>ControlSystem</scope><name>operator()</name></member>
      <member refid="classControlSystem_1a37305c982f8f403838748638b00a2c62" prot="public" virt="virtual"><scope>ControlSystem</scope><name>PostUpdate</name></member>
      <member refid="classControlSystem_1a6f4636035762d65d5cb36f29991ae08c" prot="private" virt="non-virtual"><scope>ControlSystem</scope><name>registry</name></member>
      <member refid="classControlSystem_1ac49ee092a26f74ece2648301010681c3" prot="public" virt="non-virtual"><scope>ControlSystem</scope><name>serializeInputStates</name></member>
      <member refid="classControlSystem_1a6ec47344d722e1a0774f844af6f9ef40" prot="public" virt="non-virtual"><scope>ControlSystem</scope><name>updateInputState</name></member>
      <member refid="classISystem_1a8b403989cf1780ab99f91272b3098648" prot="public" virt="virtual"><scope>ControlSystem</scope><name>~ISystem</name></member>
      <member refid="classISystemBase_1ae71b84b72f1d4eab3f8acdf50d5ee540" prot="public" virt="virtual"><scope>ControlSystem</scope><name>~ISystemBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
