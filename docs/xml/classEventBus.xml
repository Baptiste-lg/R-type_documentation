<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="classEventBus" kind="class" language="C++" prot="public">
    <compoundname>EventBus</compoundname>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classEventBus_1a76f5bdb5c5137429969637825293bd75" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; EventType, std::vector&lt; Listener &gt; &gt;</type>
        <definition>std::unordered_map&lt;EventType, std::vector&lt;Listener&gt; &gt; EventBus::listeners</definition>
        <argsstring></argsstring>
        <name>listeners</name>
        <qualifiedname>EventBus::listeners</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Event.hpp" line="66" column="24" bodyfile="include/Event.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classEventBus_1a74fcf2951925432a3b1fd07efbfd4ddd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void EventBus::addListener</definition>
        <argsstring>(EventType type, Listener listener)</argsstring>
        <name>addListener</name>
        <qualifiedname>EventBus::addListener</qualifiedname>
        <param>
          <type>EventType</type>
          <declname>type</declname>
        </param>
        <param>
          <type>Listener</type>
          <declname>listener</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Event.hpp" line="68" column="10" bodyfile="include/Event.hpp" bodystart="68" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classEventBus_1a0618a8eb5e2ad204c7916b067dc93639" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void EventBus::fireEvent</definition>
        <argsstring>(const Event &amp;event)</argsstring>
        <name>fireEvent</name>
        <qualifiedname>EventBus::fireEvent</qualifiedname>
        <param>
          <type>const <ref refid="structEvent" kindref="compound">Event</ref> &amp;</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Event.hpp" line="73" column="10" bodyfile="include/Event.hpp" bodystart="73" bodyend="78"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/Event.hpp" line="64" column="1" bodyfile="include/Event.hpp" bodystart="64" bodyend="80"/>
    <listofallmembers>
      <member refid="classEventBus_1a74fcf2951925432a3b1fd07efbfd4ddd" prot="public" virt="non-virtual"><scope>EventBus</scope><name>addListener</name></member>
      <member refid="classEventBus_1a0618a8eb5e2ad204c7916b067dc93639" prot="public" virt="non-virtual"><scope>EventBus</scope><name>fireEvent</name></member>
      <member refid="classEventBus_1a76f5bdb5c5137429969637825293bd75" prot="private" virt="non-virtual"><scope>EventBus</scope><name>listeners</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
