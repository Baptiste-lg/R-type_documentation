<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="classsparse__array" kind="class" language="C++" prot="public">
    <compoundname>sparse_array</compoundname>
    <templateparamlist>
      <param>
        <type>typename Component</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classsparse__array_1ab7403a6f935fa66034cce5bdcf49a9fc" prot="public" static="no">
        <type>std::optional&lt; Component &gt;</type>
        <definition>using sparse_array&lt; Component &gt;::value_type =  std::optional&lt;Component&gt;</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <qualifiedname>sparse_array::value_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SparseArray.hpp" line="16" column="5" bodyfile="include/SparseArray.hpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsparse__array_1a639d023286962a7b28f77fc4741e3f89" prot="public" static="no">
        <type>value_type &amp;</type>
        <definition>using sparse_array&lt; Component &gt;::reference_type =  value_type&amp;</definition>
        <argsstring></argsstring>
        <name>reference_type</name>
        <qualifiedname>sparse_array::reference_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SparseArray.hpp" line="17" column="5" bodyfile="include/SparseArray.hpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsparse__array_1a5f86eff1abd76aa4cd5387a6f4e2e7cb" prot="public" static="no">
        <type>const value_type &amp;</type>
        <definition>using sparse_array&lt; Component &gt;::const_reference_type =  const value_type&amp;</definition>
        <argsstring></argsstring>
        <name>const_reference_type</name>
        <qualifiedname>sparse_array::const_reference_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SparseArray.hpp" line="18" column="5" bodyfile="include/SparseArray.hpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsparse__array_1a5f747e93a9406474b106bde9c66f01b7" prot="public" static="no">
        <type>std::vector&lt; value_type &gt;</type>
        <definition>using sparse_array&lt; Component &gt;::container_t =  std::vector&lt;value_type&gt;</definition>
        <argsstring></argsstring>
        <name>container_t</name>
        <qualifiedname>sparse_array::container_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SparseArray.hpp" line="19" column="5" bodyfile="include/SparseArray.hpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsparse__array_1af1468a11a30a58090580d1fb399e3cc0" prot="public" static="no">
        <type>typename container_t::size_type</type>
        <definition>using sparse_array&lt; Component &gt;::size_type =  typename container_t::size_type</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <qualifiedname>sparse_array::size_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SparseArray.hpp" line="20" column="5" bodyfile="include/SparseArray.hpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsparse__array_1a1293c5b64d77bb97ed87e57c6276925e" prot="public" static="no">
        <type>typename container_t::iterator</type>
        <definition>using sparse_array&lt; Component &gt;::iterator =  typename container_t::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <qualifiedname>sparse_array::iterator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SparseArray.hpp" line="21" column="5" bodyfile="include/SparseArray.hpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsparse__array_1a9beecc69673481f79844336194dfc1a2" prot="public" static="no">
        <type>typename container_t::const_iterator</type>
        <definition>using sparse_array&lt; Component &gt;::const_iterator =  typename container_t::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <qualifiedname>sparse_array::const_iterator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SparseArray.hpp" line="22" column="5" bodyfile="include/SparseArray.hpp" bodystart="22" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsparse__array_1af112878e0e1b449f263d4bb8f6ef758b" prot="private" static="no" mutable="no">
        <type>container_t</type>
        <definition>container_t sparse_array&lt; Component &gt;::_data</definition>
        <argsstring></argsstring>
        <name>_data</name>
        <qualifiedname>sparse_array::_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SparseArray.hpp" line="153" column="17" bodyfile="include/SparseArray.hpp" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsparse__array_1a262b9e6360353003285c365cc19de1f9" prot="private" static="no" mutable="no">
        <type>std::vector&lt; bool &gt;</type>
        <definition>std::vector&lt;bool&gt; sparse_array&lt; Component &gt;::_active_flags</definition>
        <argsstring></argsstring>
        <name>_active_flags</name>
        <qualifiedname>sparse_array::_active_flags</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SparseArray.hpp" line="154" column="17" bodyfile="include/SparseArray.hpp" bodystart="154" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classsparse__array_1a9437af3619227d4ab973cad2f6bfa818" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>sparse_array&lt; Component &gt;::sparse_array</definition>
        <argsstring>()=default</argsstring>
        <name>sparse_array</name>
        <qualifiedname>sparse_array::sparse_array</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SparseArray.hpp" line="25" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classsparse__array_1ae3d7b6071f4910c92d3e83dd61c2c60c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>sparse_array&lt; Component &gt;::sparse_array</definition>
        <argsstring>(const sparse_array &amp;)=default</argsstring>
        <name>sparse_array</name>
        <qualifiedname>sparse_array::sparse_array</qualifiedname>
        <param>
          <type>const <ref refid="classsparse__array" kindref="compound">sparse_array</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SparseArray.hpp" line="26" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classsparse__array_1ad93b07fae9a6a1e0029768fd8aa22703" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>sparse_array&lt; Component &gt;::sparse_array</definition>
        <argsstring>(sparse_array &amp;&amp;) noexcept=default</argsstring>
        <name>sparse_array</name>
        <qualifiedname>sparse_array::sparse_array</qualifiedname>
        <param>
          <type><ref refid="classsparse__array" kindref="compound">sparse_array</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SparseArray.hpp" line="27" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classsparse__array_1a462f64cc46c81b54e7c7d1181f7b889f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>sparse_array&lt; Component &gt;::~sparse_array</definition>
        <argsstring>()=default</argsstring>
        <name>~sparse_array</name>
        <qualifiedname>sparse_array::~sparse_array</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SparseArray.hpp" line="28" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classsparse__array_1a7d08dd3b7bf4dd2247ab7596936ba5be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsparse__array" kindref="compound">sparse_array</ref> &amp;</type>
        <definition>sparse_array &amp; sparse_array&lt; Component &gt;::operator=</definition>
        <argsstring>(const sparse_array &amp;)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>sparse_array::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classsparse__array" kindref="compound">sparse_array</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SparseArray.hpp" line="30" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classsparse__array_1a1f8c213f7e998b54425fda09f2453077" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="classsparse__array" kindref="compound">sparse_array</ref> &amp;</type>
        <definition>sparse_array &amp; sparse_array&lt; Component &gt;::operator=</definition>
        <argsstring>(sparse_array &amp;&amp;) noexcept=default</argsstring>
        <name>operator=</name>
        <qualifiedname>sparse_array::operator=</qualifiedname>
        <param>
          <type><ref refid="classsparse__array" kindref="compound">sparse_array</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SparseArray.hpp" line="31" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classsparse__array_1a4aa1f2fae14ff1cecdc6e42ded260cad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>reference_type</type>
        <definition>reference_type sparse_array&lt; Component &gt;::operator[]</definition>
        <argsstring>(size_t idx)</argsstring>
        <name>operator[]</name>
        <qualifiedname>sparse_array::operator[]</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SparseArray.hpp" line="32" column="20" bodyfile="include/SparseArray.hpp" bodystart="32" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classsparse__array_1a1d66e1a1e11a9bcef70425c3c09eb6b4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_reference_type</type>
        <definition>const_reference_type sparse_array&lt; Component &gt;::operator[]</definition>
        <argsstring>(size_t idx) const</argsstring>
        <name>operator[]</name>
        <qualifiedname>sparse_array::operator[]</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SparseArray.hpp" line="38" column="26" bodyfile="include/SparseArray.hpp" bodystart="38" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classsparse__array_1a1cdf824b5897fb3ffc857843b37453b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator sparse_array&lt; Component &gt;::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <qualifiedname>sparse_array::begin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SparseArray.hpp" line="42" column="14" bodyfile="include/SparseArray.hpp" bodystart="42" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classsparse__array_1a25c3a93f84f860ee55bb25f8da67e358" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator sparse_array&lt; Component &gt;::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <qualifiedname>sparse_array::begin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SparseArray.hpp" line="46" column="20" bodyfile="include/SparseArray.hpp" bodystart="46" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classsparse__array_1a8f6e23b67ea783baf53129f8907e297a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator sparse_array&lt; Component &gt;::cbegin</definition>
        <argsstring>() const</argsstring>
        <name>cbegin</name>
        <qualifiedname>sparse_array::cbegin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SparseArray.hpp" line="50" column="20" bodyfile="include/SparseArray.hpp" bodystart="50" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classsparse__array_1af6749bdfbdc5200a77549f52594107eb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator sparse_array&lt; Component &gt;::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <qualifiedname>sparse_array::end</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SparseArray.hpp" line="54" column="14" bodyfile="include/SparseArray.hpp" bodystart="54" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classsparse__array_1a094425cbf56a592e130b67ecda68cd3d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator sparse_array&lt; Component &gt;::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <qualifiedname>sparse_array::end</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SparseArray.hpp" line="58" column="20" bodyfile="include/SparseArray.hpp" bodystart="58" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classsparse__array_1adb95eba3fb7e88207a4374c04950d167" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator sparse_array&lt; Component &gt;::cend</definition>
        <argsstring>() const</argsstring>
        <name>cend</name>
        <qualifiedname>sparse_array::cend</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SparseArray.hpp" line="62" column="20" bodyfile="include/SparseArray.hpp" bodystart="62" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classsparse__array_1a6679a2315be266da4c01ad97f00e51fd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_type</type>
        <definition>size_type sparse_array&lt; Component &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <qualifiedname>sparse_array::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SparseArray.hpp" line="66" column="15" bodyfile="include/SparseArray.hpp" bodystart="66" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classsparse__array_1a88da27a9bbbf7bbc1465f3f458a33968" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_type</type>
        <definition>size_type sparse_array&lt; Component &gt;::actual_size</definition>
        <argsstring>() const</argsstring>
        <name>actual_size</name>
        <qualifiedname>sparse_array::actual_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SparseArray.hpp" line="69" column="15" bodyfile="include/SparseArray.hpp" bodystart="69" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classsparse__array_1a5c2d2ee03e377e66f612e8c753bbdbf4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>reference_type</type>
        <definition>reference_type sparse_array&lt; Component &gt;::insert_at</definition>
        <argsstring>(size_type pos, const Component &amp;comp)</argsstring>
        <name>insert_at</name>
        <qualifiedname>sparse_array::insert_at</qualifiedname>
        <param>
          <type>size_type</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>const Component &amp;</type>
          <declname>comp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SparseArray.hpp" line="75" column="20" bodyfile="include/SparseArray.hpp" bodystart="75" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classsparse__array_1a0deaa37276bdd7ed64b33ce2d5c91e94" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>reference_type</type>
        <definition>reference_type sparse_array&lt; Component &gt;::insert_at</definition>
        <argsstring>(size_type pos, Component &amp;&amp;comp)</argsstring>
        <name>insert_at</name>
        <qualifiedname>sparse_array::insert_at</qualifiedname>
        <param>
          <type>size_type</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>Component &amp;&amp;</type>
          <declname>comp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SparseArray.hpp" line="85" column="20" bodyfile="include/SparseArray.hpp" bodystart="85" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classsparse__array_1a29ce1fbf70d7518e96d0003afa74ec93" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>Params</declname>
            <defname>Params</defname>
          </param>
        </templateparamlist>
        <type>reference_type</type>
        <definition>reference_type sparse_array&lt; Component &gt;::emplace_at</definition>
        <argsstring>(size_type pos, Params &amp;&amp;... params)</argsstring>
        <name>emplace_at</name>
        <qualifiedname>sparse_array::emplace_at</qualifiedname>
        <param>
          <type>size_type</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>Params &amp;&amp;...</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SparseArray.hpp" line="96" column="20" bodyfile="include/SparseArray.hpp" bodystart="96" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classsparse__array_1ac0bea77704ce39c1a731dc69de8d9d2d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void sparse_array&lt; Component &gt;::erase</definition>
        <argsstring>(size_type pos)</argsstring>
        <name>erase</name>
        <qualifiedname>sparse_array::erase</qualifiedname>
        <param>
          <type>size_type</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SparseArray.hpp" line="103" column="10" bodyfile="include/SparseArray.hpp" bodystart="103" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classsparse__array_1a02d735223829a30d0235f5caddb39d8a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool sparse_array&lt; Component &gt;::contains</definition>
        <argsstring>(size_type pos) const</argsstring>
        <name>contains</name>
        <qualifiedname>sparse_array::contains</qualifiedname>
        <param>
          <type>size_type</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SparseArray.hpp" line="114" column="10" bodyfile="include/SparseArray.hpp" bodystart="114" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classsparse__array_1a64f2992f6290db45edf6423798822b6a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void sparse_array&lt; Component &gt;::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <qualifiedname>sparse_array::clear</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SparseArray.hpp" line="121" column="10" bodyfile="include/SparseArray.hpp" bodystart="121" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classsparse__array_1a9f3a7ce179f990f059d9fafbbe3220bb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool sparse_array&lt; Component &gt;::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <qualifiedname>sparse_array::empty</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SparseArray.hpp" line="124" column="10" bodyfile="include/SparseArray.hpp" bodystart="124" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classsparse__array_1afce194ae6c66571e16396f4efe6a10e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void sparse_array&lt; Component &gt;::activate</definition>
        <argsstring>(size_type pos)</argsstring>
        <name>activate</name>
        <qualifiedname>sparse_array::activate</qualifiedname>
        <param>
          <type>size_type</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SparseArray.hpp" line="132" column="10" bodyfile="include/SparseArray.hpp" bodystart="132" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classsparse__array_1a1ae5e8b1f883f7616e2c0f4c3c6b6167" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void sparse_array&lt; Component &gt;::deactivate</definition>
        <argsstring>(size_type pos)</argsstring>
        <name>deactivate</name>
        <qualifiedname>sparse_array::deactivate</qualifiedname>
        <param>
          <type>size_type</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SparseArray.hpp" line="138" column="10" bodyfile="include/SparseArray.hpp" bodystart="138" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classsparse__array_1a2605772cde06f5f76cea610d5d0f031b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool sparse_array&lt; Component &gt;::is_active</definition>
        <argsstring>(size_type pos) const</argsstring>
        <name>is_active</name>
        <qualifiedname>sparse_array::is_active</qualifiedname>
        <param>
          <type>size_type</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SparseArray.hpp" line="144" column="10" bodyfile="include/SparseArray.hpp" bodystart="144" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classsparse__array_1a52f019d9eada7f87151371a0274b5b64" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void sparse_array&lt; Component &gt;::ensure_flag_size</definition>
        <argsstring>(size_type pos)</argsstring>
        <name>ensure_flag_size</name>
        <qualifiedname>sparse_array::ensure_flag_size</qualifiedname>
        <param>
          <type>size_type</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SparseArray.hpp" line="147" column="10" bodyfile="include/SparseArray.hpp" bodystart="147" bodyend="151"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/SparseArray.hpp" line="14" column="1" bodyfile="include/SparseArray.hpp" bodystart="14" bodyend="156"/>
    <listofallmembers>
      <member refid="classsparse__array_1a262b9e6360353003285c365cc19de1f9" prot="private" virt="non-virtual"><scope>sparse_array</scope><name>_active_flags</name></member>
      <member refid="classsparse__array_1af112878e0e1b449f263d4bb8f6ef758b" prot="private" virt="non-virtual"><scope>sparse_array</scope><name>_data</name></member>
      <member refid="classsparse__array_1afce194ae6c66571e16396f4efe6a10e6" prot="public" virt="non-virtual"><scope>sparse_array</scope><name>activate</name></member>
      <member refid="classsparse__array_1a88da27a9bbbf7bbc1465f3f458a33968" prot="public" virt="non-virtual"><scope>sparse_array</scope><name>actual_size</name></member>
      <member refid="classsparse__array_1a1cdf824b5897fb3ffc857843b37453b2" prot="public" virt="non-virtual"><scope>sparse_array</scope><name>begin</name></member>
      <member refid="classsparse__array_1a25c3a93f84f860ee55bb25f8da67e358" prot="public" virt="non-virtual"><scope>sparse_array</scope><name>begin</name></member>
      <member refid="classsparse__array_1a8f6e23b67ea783baf53129f8907e297a" prot="public" virt="non-virtual"><scope>sparse_array</scope><name>cbegin</name></member>
      <member refid="classsparse__array_1adb95eba3fb7e88207a4374c04950d167" prot="public" virt="non-virtual"><scope>sparse_array</scope><name>cend</name></member>
      <member refid="classsparse__array_1a64f2992f6290db45edf6423798822b6a" prot="public" virt="non-virtual"><scope>sparse_array</scope><name>clear</name></member>
      <member refid="classsparse__array_1a9beecc69673481f79844336194dfc1a2" prot="public" virt="non-virtual"><scope>sparse_array</scope><name>const_iterator</name></member>
      <member refid="classsparse__array_1a5f86eff1abd76aa4cd5387a6f4e2e7cb" prot="public" virt="non-virtual"><scope>sparse_array</scope><name>const_reference_type</name></member>
      <member refid="classsparse__array_1a5f747e93a9406474b106bde9c66f01b7" prot="public" virt="non-virtual"><scope>sparse_array</scope><name>container_t</name></member>
      <member refid="classsparse__array_1a02d735223829a30d0235f5caddb39d8a" prot="public" virt="non-virtual"><scope>sparse_array</scope><name>contains</name></member>
      <member refid="classsparse__array_1a1ae5e8b1f883f7616e2c0f4c3c6b6167" prot="public" virt="non-virtual"><scope>sparse_array</scope><name>deactivate</name></member>
      <member refid="classsparse__array_1a29ce1fbf70d7518e96d0003afa74ec93" prot="public" virt="non-virtual"><scope>sparse_array</scope><name>emplace_at</name></member>
      <member refid="classsparse__array_1a9f3a7ce179f990f059d9fafbbe3220bb" prot="public" virt="non-virtual"><scope>sparse_array</scope><name>empty</name></member>
      <member refid="classsparse__array_1af6749bdfbdc5200a77549f52594107eb" prot="public" virt="non-virtual"><scope>sparse_array</scope><name>end</name></member>
      <member refid="classsparse__array_1a094425cbf56a592e130b67ecda68cd3d" prot="public" virt="non-virtual"><scope>sparse_array</scope><name>end</name></member>
      <member refid="classsparse__array_1a52f019d9eada7f87151371a0274b5b64" prot="public" virt="non-virtual"><scope>sparse_array</scope><name>ensure_flag_size</name></member>
      <member refid="classsparse__array_1ac0bea77704ce39c1a731dc69de8d9d2d" prot="public" virt="non-virtual"><scope>sparse_array</scope><name>erase</name></member>
      <member refid="classsparse__array_1a5c2d2ee03e377e66f612e8c753bbdbf4" prot="public" virt="non-virtual"><scope>sparse_array</scope><name>insert_at</name></member>
      <member refid="classsparse__array_1a0deaa37276bdd7ed64b33ce2d5c91e94" prot="public" virt="non-virtual"><scope>sparse_array</scope><name>insert_at</name></member>
      <member refid="classsparse__array_1a2605772cde06f5f76cea610d5d0f031b" prot="public" virt="non-virtual"><scope>sparse_array</scope><name>is_active</name></member>
      <member refid="classsparse__array_1a1293c5b64d77bb97ed87e57c6276925e" prot="public" virt="non-virtual"><scope>sparse_array</scope><name>iterator</name></member>
      <member refid="classsparse__array_1a7d08dd3b7bf4dd2247ab7596936ba5be" prot="public" virt="non-virtual"><scope>sparse_array</scope><name>operator=</name></member>
      <member refid="classsparse__array_1a1f8c213f7e998b54425fda09f2453077" prot="public" virt="non-virtual"><scope>sparse_array</scope><name>operator=</name></member>
      <member refid="classsparse__array_1a4aa1f2fae14ff1cecdc6e42ded260cad" prot="public" virt="non-virtual"><scope>sparse_array</scope><name>operator[]</name></member>
      <member refid="classsparse__array_1a1d66e1a1e11a9bcef70425c3c09eb6b4" prot="public" virt="non-virtual"><scope>sparse_array</scope><name>operator[]</name></member>
      <member refid="classsparse__array_1a639d023286962a7b28f77fc4741e3f89" prot="public" virt="non-virtual"><scope>sparse_array</scope><name>reference_type</name></member>
      <member refid="classsparse__array_1a6679a2315be266da4c01ad97f00e51fd" prot="public" virt="non-virtual"><scope>sparse_array</scope><name>size</name></member>
      <member refid="classsparse__array_1af1468a11a30a58090580d1fb399e3cc0" prot="public" virt="non-virtual"><scope>sparse_array</scope><name>size_type</name></member>
      <member refid="classsparse__array_1a9437af3619227d4ab973cad2f6bfa818" prot="public" virt="non-virtual"><scope>sparse_array</scope><name>sparse_array</name></member>
      <member refid="classsparse__array_1ae3d7b6071f4910c92d3e83dd61c2c60c" prot="public" virt="non-virtual"><scope>sparse_array</scope><name>sparse_array</name></member>
      <member refid="classsparse__array_1ad93b07fae9a6a1e0029768fd8aa22703" prot="public" virt="non-virtual"><scope>sparse_array</scope><name>sparse_array</name></member>
      <member refid="classsparse__array_1ab7403a6f935fa66034cce5bdcf49a9fc" prot="public" virt="non-virtual"><scope>sparse_array</scope><name>value_type</name></member>
      <member refid="classsparse__array_1a462f64cc46c81b54e7c7d1181f7b889f" prot="public" virt="non-virtual"><scope>sparse_array</scope><name>~sparse_array</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
