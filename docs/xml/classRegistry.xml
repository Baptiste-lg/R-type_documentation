<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="classRegistry" kind="class" language="C++" prot="public">
    <compoundname>Registry</compoundname>
    <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classRegistry_1a99251f8a9d29a77cec2a59cd27109e92" prot="private" static="no">
        <type>std::function&lt; void(entity_t)&gt;</type>
        <definition>using Registry::SystemFunction =  std::function&lt;void(entity_t)&gt;</definition>
        <argsstring></argsstring>
        <name>SystemFunction</name>
        <qualifiedname>Registry::SystemFunction</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Registry.hpp" line="321" column="5" bodyfile="include/Registry.hpp" bodystart="321" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classRegistry_1a6de44ffca6e12a0f879932ca541ba95b" prot="public" static="no" mutable="no">
        <type>std::tuple&lt; bool, GameState, GameState, GameState &gt;</type>
        <definition>std::tuple&lt;bool, GameState, GameState, GameState&gt; Registry::gameStates</definition>
        <argsstring></argsstring>
        <name>gameStates</name>
        <qualifiedname>Registry::gameStates</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Registry.hpp" line="255" column="16" bodyfile="include/Registry.hpp" bodystart="255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classRegistry_1a3c755e3138615b24fe5e828958a5d393" prot="public" static="no" mutable="no">
        <type>std::unordered_map&lt; entity_t, std::function&lt; void(<ref refid="classRegistry" kindref="compound">Registry</ref> &amp;, entity_t)&gt;</type>
        <definition>std::unordered_map&lt;entity_t, std::function&lt;void(Registry&amp;, entity_t)&gt; Registry::_entity_constructors) </definition>
        <argsstring>)</argsstring>
        <name>_entity_constructors</name>
        <qualifiedname>Registry::_entity_constructors</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Registry.hpp" line="312" column="24" bodyfile="include/Registry.hpp" bodystart="312" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classRegistry_1a64d16d19a51d39bf91d5cf11473d63d0" prot="public" static="no" mutable="no">
        <type>std::unordered_set&lt; entity_t &gt;</type>
        <definition>std::unordered_set&lt;entity_t&gt; Registry::_inactive_entities</definition>
        <argsstring></argsstring>
        <name>_inactive_entities</name>
        <qualifiedname>Registry::_inactive_entities</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Registry.hpp" line="313" column="24" bodyfile="include/Registry.hpp" bodystart="313" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classRegistry_1ae30ac722dbeae902c384462237155f7d" prot="public" static="no" mutable="no">
        <type>std::unordered_set&lt; entity_t &gt;</type>
        <definition>std::unordered_set&lt;entity_t&gt; Registry::_active_entities</definition>
        <argsstring></argsstring>
        <name>_active_entities</name>
        <qualifiedname>Registry::_active_entities</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Registry.hpp" line="314" column="24" bodyfile="include/Registry.hpp" bodystart="314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classRegistry_1a306834e38afd365230bb47f3a58ca683" prot="public" static="no" mutable="no">
        <type><ref refid="classEventBus" kindref="compound">EventBus</ref></type>
        <definition>EventBus Registry::eventBus</definition>
        <argsstring></argsstring>
        <name>eventBus</name>
        <qualifiedname>Registry::eventBus</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Registry.hpp" line="315" column="14" bodyfile="include/Registry.hpp" bodystart="315" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classRegistry_1abe77d2467689c326ee208e6296f4522b" prot="public" static="no" mutable="no">
        <type>std::unordered_map&lt; int, entity_t &gt;</type>
        <definition>std::unordered_map&lt;int, entity_t&gt; Registry::clientToEntityMap</definition>
        <argsstring></argsstring>
        <name>clientToEntityMap</name>
        <qualifiedname>Registry::clientToEntityMap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Registry.hpp" line="316" column="24" bodyfile="include/Registry.hpp" bodystart="316" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classRegistry_1a3125d6a89a2474702c4d6b4ae9c6cd69" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; std::type_index, std::any &gt;</type>
        <definition>std::unordered_map&lt;std::type_index, std::any&gt; Registry::_components_arrays</definition>
        <argsstring></argsstring>
        <name>_components_arrays</name>
        <qualifiedname>Registry::_components_arrays</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Registry.hpp" line="319" column="24" bodyfile="include/Registry.hpp" bodystart="319" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classRegistry_1a33786f17ea0a22f87301edbcf2595695" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; std::type_index, std::function&lt; void(entity_t)&gt; &gt;</type>
        <definition>std::unordered_map&lt;std::type_index, std::function&lt;void(entity_t)&gt; &gt; Registry::_eraser_functions</definition>
        <argsstring></argsstring>
        <name>_eraser_functions</name>
        <qualifiedname>Registry::_eraser_functions</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Registry.hpp" line="320" column="24" bodyfile="include/Registry.hpp" bodystart="320" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classRegistry_1a23730d886cb2d6bc04947b932785cd7a" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="classISystemBase" kindref="compound">ISystemBase</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;ISystemBase&gt; &gt; Registry::_system_instances</definition>
        <argsstring></argsstring>
        <name>_system_instances</name>
        <qualifiedname>Registry::_system_instances</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Registry.hpp" line="322" column="17" bodyfile="include/Registry.hpp" bodystart="322" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classRegistry_1aab7c17d02faecab847dadd8d0186566d" prot="private" static="no" mutable="no">
        <type>std::vector&lt; SystemFunction &gt;</type>
        <definition>std::vector&lt;SystemFunction&gt; Registry::_systems</definition>
        <argsstring></argsstring>
        <name>_systems</name>
        <qualifiedname>Registry::_systems</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Registry.hpp" line="323" column="17" bodyfile="include/Registry.hpp" bodystart="323" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classRegistry_1a854f2d937408abcd472a0212d5b6edac" prot="private" static="no" mutable="no">
        <type>std::vector&lt; entity_t &gt;</type>
        <definition>std::vector&lt;entity_t&gt; Registry::_free_ids</definition>
        <argsstring></argsstring>
        <name>_free_ids</name>
        <qualifiedname>Registry::_free_ids</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Registry.hpp" line="324" column="17" bodyfile="include/Registry.hpp" bodystart="324" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classRegistry_1ae42b534f08225c6ed097d0dbdff42b6e" prot="private" static="no" mutable="no">
        <type>entity_t</type>
        <definition>entity_t Registry::_next_id</definition>
        <argsstring></argsstring>
        <name>_next_id</name>
        <qualifiedname>Registry::_next_id</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Registry.hpp" line="325" column="14" bodyfile="include/Registry.hpp" bodystart="325" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classRegistry_1af56668d56e82d5ac6354a8b07e52f781" prot="private" static="no" mutable="no">
        <type>std::vector&lt; entity_t &gt;</type>
        <definition>std::vector&lt;entity_t&gt; Registry::_entities_to_delete</definition>
        <argsstring></argsstring>
        <name>_entities_to_delete</name>
        <qualifiedname>Registry::_entities_to_delete</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Registry.hpp" line="326" column="17" bodyfile="include/Registry.hpp" bodystart="326" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classRegistry_1ab1bf016feb4218144bb4ebb7fe551e1e" prot="private" static="no" mutable="no">
        <type>std::vector&lt; entity_t &gt;</type>
        <definition>std::vector&lt;entity_t&gt; Registry::_entities_to_create</definition>
        <argsstring></argsstring>
        <name>_entities_to_create</name>
        <qualifiedname>Registry::_entities_to_create</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Registry.hpp" line="327" column="17" bodyfile="include/Registry.hpp" bodystart="327" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classRegistry_1a74afd837a5a8046b9201be46f00aec03" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::function&lt; void(entity_t, <ref refid="classRegistry" kindref="compound">Registry</ref> &amp;)&gt;</type>
        <definition>std::vector&lt;std::function&lt;void(entity_t, Registry&amp;)&gt; Registry::component_adders) </definition>
        <argsstring>)</argsstring>
        <name>component_adders</name>
        <qualifiedname>Registry::component_adders</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Registry.hpp" line="328" column="17" bodyfile="include/Registry.hpp" bodystart="328" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classRegistry_1ac1f3104c48ca115788fbc66d866485b6" prot="private" static="no" mutable="no">
        <type>std::vector&lt; entity_t &gt;</type>
        <definition>std::vector&lt;entity_t&gt; Registry::_newly_created_entities</definition>
        <argsstring></argsstring>
        <name>_newly_created_entities</name>
        <qualifiedname>Registry::_newly_created_entities</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Registry.hpp" line="329" column="17" bodyfile="include/Registry.hpp" bodystart="329" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classRegistry_1a525fda0dbd380314240f491b42f136b9" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Registry::path_to_music</definition>
        <argsstring></argsstring>
        <name>path_to_music</name>
        <qualifiedname>Registry::path_to_music</qualifiedname>
        <initializer>= &quot;asset/Beatmaps&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Registry.hpp" line="330" column="17" bodyfile="include/Registry.hpp" bodystart="330" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classRegistry_1acb15d8aa051bf36ea92a86ee6c00bc3c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Registry::Registry</definition>
        <argsstring>()</argsstring>
        <name>Registry</name>
        <qualifiedname>Registry::Registry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Registry.hpp" line="40" column="5" bodyfile="include/Registry.hpp" bodystart="40" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classRegistry_1ad81bdeebc99ce487b6a2b667d4e49674" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>entity_t</type>
        <definition>entity_t Registry::spawn_entity</definition>
        <argsstring>()</argsstring>
        <name>spawn_entity</name>
        <qualifiedname>Registry::spawn_entity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Registry.hpp" line="44" column="14" bodyfile="include/Registry.hpp" bodystart="44" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classRegistry_1a5da35cc9245855170c25f75637b61fe0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>entity_t</type>
        <definition>entity_t Registry::spawnInactivedEntity</definition>
        <argsstring>()</argsstring>
        <name>spawnInactivedEntity</name>
        <qualifiedname>Registry::spawnInactivedEntity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Registry.hpp" line="57" column="14" bodyfile="include/Registry.hpp" bodystart="57" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classRegistry_1ae1bc4e1ff64aac0d4657386dade88dca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Registry::kill_entity</definition>
        <argsstring>(entity_t const &amp;e)</argsstring>
        <name>kill_entity</name>
        <qualifiedname>Registry::kill_entity</qualifiedname>
        <param>
          <type>entity_t const &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Registry.hpp" line="69" column="10" bodyfile="include/Registry.hpp" bodystart="69" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classRegistry_1a90d1e87724c7a1b8fec3629a843e902f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Registry::activate_entity</definition>
        <argsstring>(entity_t const &amp;e)</argsstring>
        <name>activate_entity</name>
        <qualifiedname>Registry::activate_entity</qualifiedname>
        <param>
          <type>entity_t const &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Registry.hpp" line="77" column="10" bodyfile="include/Registry.hpp" bodystart="77" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classRegistry_1aa429b8c11530102655561013ea5cd815" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Registry::deactivate_entity</definition>
        <argsstring>(entity_t const &amp;e)</argsstring>
        <name>deactivate_entity</name>
        <qualifiedname>Registry::deactivate_entity</qualifiedname>
        <param>
          <type>entity_t const &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Registry.hpp" line="93" column="10" bodyfile="include/Registry.hpp" bodystart="93" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classRegistry_1ac7886237a4856f5bd74110cdd7acdef9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>entity_t</type>
        <definition>entity_t Registry::entity_from_index</definition>
        <argsstring>(std::size_t idx)</argsstring>
        <name>entity_from_index</name>
        <qualifiedname>Registry::entity_from_index</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Registry.hpp" line="100" column="14" bodyfile="include/Registry.hpp" bodystart="100" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classRegistry_1a2a72ec0e5b4cbe4c2f9494eb98d84afb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Component</type>
          </param>
        </templateparamlist>
        <type><ref refid="classsparse__array" kindref="compound">sparse_array</ref>&lt; Component &gt;::reference_type</type>
        <definition>sparse_array&lt; Component &gt;::reference_type Registry::add_component</definition>
        <argsstring>(entity_t const &amp;to, Component &amp;&amp;c)</argsstring>
        <name>add_component</name>
        <qualifiedname>Registry::add_component</qualifiedname>
        <param>
          <type>entity_t const &amp;</type>
          <declname>to</declname>
        </param>
        <param>
          <type>Component &amp;&amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Registry.hpp" line="104" column="44" bodyfile="include/Registry.hpp" bodystart="104" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classRegistry_1a0d360d62ab695fe8c8fc367b9fe7ea67" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Component</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Params</declname>
            <defname>Params</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classsparse__array" kindref="compound">sparse_array</ref>&lt; Component &gt;::reference_type</type>
        <definition>sparse_array&lt; Component &gt;::reference_type Registry::emplace_component</definition>
        <argsstring>(entity_t const &amp;to, Params &amp;&amp;... p)</argsstring>
        <name>emplace_component</name>
        <qualifiedname>Registry::emplace_component</qualifiedname>
        <param>
          <type>entity_t const &amp;</type>
          <declname>to</declname>
        </param>
        <param>
          <type>Params &amp;&amp;...</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Registry.hpp" line="110" column="44" bodyfile="include/Registry.hpp" bodystart="110" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classRegistry_1a8af690a38f4982d9479401e7c69c33d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Component</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Registry::remove_component</definition>
        <argsstring>(entity_t const &amp;from)</argsstring>
        <name>remove_component</name>
        <qualifiedname>Registry::remove_component</qualifiedname>
        <param>
          <type>entity_t const &amp;</type>
          <declname>from</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Registry.hpp" line="116" column="10" bodyfile="include/Registry.hpp" bodystart="116" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classRegistry_1a5397b38d1643c5dee4114d20190baf50" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Component</type>
          </param>
        </templateparamlist>
        <type><ref refid="classsparse__array" kindref="compound">sparse_array</ref>&lt; Component &gt; &amp;</type>
        <definition>sparse_array&lt; Component &gt; &amp; Registry::register_component</definition>
        <argsstring>()</argsstring>
        <name>register_component</name>
        <qualifiedname>Registry::register_component</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Registry.hpp" line="123" column="18" bodyfile="include/Registry.hpp" bodystart="123" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classRegistry_1a9bd59de84cb86995d3dddf31f706938b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Component</type>
          </param>
        </templateparamlist>
        <type><ref refid="classsparse__array" kindref="compound">sparse_array</ref>&lt; Component &gt; &amp;</type>
        <definition>sparse_array&lt; Component &gt; &amp; Registry::get_components</definition>
        <argsstring>()</argsstring>
        <name>get_components</name>
        <qualifiedname>Registry::get_components</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Registry.hpp" line="136" column="18" bodyfile="include/Registry.hpp" bodystart="136" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classRegistry_1a706a223fe2432a6344565bb4fa7f4c8e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Component</type>
          </param>
        </templateparamlist>
        <type>const <ref refid="classsparse__array" kindref="compound">sparse_array</ref>&lt; Component &gt; &amp;</type>
        <definition>const sparse_array&lt; Component &gt; &amp; Registry::get_components</definition>
        <argsstring>() const</argsstring>
        <name>get_components</name>
        <qualifiedname>Registry::get_components</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Registry.hpp" line="146" column="24" bodyfile="include/Registry.hpp" bodystart="146" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classRegistry_1a2b65cee6b96660f6c492cf577ccbb310" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class SystemType</type>
          </param>
          <param>
            <type>class...</type>
            <declname>Components</declname>
            <defname>Components</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Registry::add_system</definition>
        <argsstring>(std::unique_ptr&lt; SystemType &gt; sys)</argsstring>
        <name>add_system</name>
        <qualifiedname>Registry::add_system</qualifiedname>
        <param>
          <type>std::unique_ptr&lt; SystemType &gt;</type>
          <declname>sys</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Registry.hpp" line="151" column="10" bodyfile="include/Registry.hpp" bodystart="151" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classRegistry_1a15a6de78dc2259220850e60b540148aa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Registry::run_systems</definition>
        <argsstring>()</argsstring>
        <name>run_systems</name>
        <qualifiedname>Registry::run_systems</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Registry.hpp" line="161" column="10" bodyfile="include/Registry.hpp" bodystart="161" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="classRegistry_1a007f79c28713d4b9dfd3c186d91175d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Registry::run_fft_system</definition>
        <argsstring>()</argsstring>
        <name>run_fft_system</name>
        <qualifiedname>Registry::run_fft_system</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Registry.hpp" line="182" column="10" bodyfile="include/Registry.hpp" bodystart="182" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="classRegistry_1ae81e0e64ea97ad040fe418cf041f14a7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Registry::run_draw_system</definition>
        <argsstring>()</argsstring>
        <name>run_draw_system</name>
        <qualifiedname>Registry::run_draw_system</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Registry.hpp" line="192" column="10" bodyfile="include/Registry.hpp" bodystart="192" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classRegistry_1a9802fa44d67c082a2605b4dc0f488355" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Registry::queue_for_deletion</definition>
        <argsstring>(entity_t const &amp;e)</argsstring>
        <name>queue_for_deletion</name>
        <qualifiedname>Registry::queue_for_deletion</qualifiedname>
        <param>
          <type>entity_t const &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Registry.hpp" line="201" column="10" bodyfile="include/Registry.hpp" bodystart="201" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="classRegistry_1a5526a14dea0c0a8927d8468548896158" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Registry::delete_queued_entities</definition>
        <argsstring>()</argsstring>
        <name>delete_queued_entities</name>
        <qualifiedname>Registry::delete_queued_entities</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Registry.hpp" line="205" column="10" bodyfile="include/Registry.hpp" bodystart="205" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="classRegistry_1a4f7d1c8d95cf6aca7a89b8a57554fde7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>entity_t</type>
        <definition>entity_t Registry::queue_for_creation</definition>
        <argsstring>()</argsstring>
        <name>queue_for_creation</name>
        <qualifiedname>Registry::queue_for_creation</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Registry.hpp" line="212" column="14" bodyfile="include/Registry.hpp" bodystart="212" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="classRegistry_1a32ee090d426abf81188dcf616befbd31" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>entity_t</type>
        <definition>entity_t Registry::queue_for_creation</definition>
        <argsstring>(std::function&lt; void(Registry &amp;, entity_t)&gt; constructor)</argsstring>
        <name>queue_for_creation</name>
        <qualifiedname>Registry::queue_for_creation</qualifiedname>
        <param>
          <type>std::function&lt; void(<ref refid="classRegistry" kindref="compound">Registry</ref> &amp;, entity_t)&gt;</type>
          <declname>constructor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Registry.hpp" line="223" column="14" bodyfile="include/Registry.hpp" bodystart="223" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="classRegistry_1a04831eff336faa213791bdb14a190862" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Registry::create_queued_entities</definition>
        <argsstring>()</argsstring>
        <name>create_queued_entities</name>
        <qualifiedname>Registry::create_queued_entities</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Registry.hpp" line="229" column="10" bodyfile="include/Registry.hpp" bodystart="229" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="classRegistry_1a9982cdeaae9322564b09d27b68067462" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; entity_t &gt;</type>
        <definition>std::vector&lt; entity_t &gt; Registry::get_newly_created_entities</definition>
        <argsstring>() const</argsstring>
        <name>get_newly_created_entities</name>
        <qualifiedname>Registry::get_newly_created_entities</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Registry.hpp" line="237" column="17" bodyfile="include/Registry.hpp" bodystart="237" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="classRegistry_1a862b19ed0e5821885888c11705fe74a2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Registry::AddComponentsToNewEntities</definition>
        <argsstring>()</argsstring>
        <name>AddComponentsToNewEntities</name>
        <qualifiedname>Registry::AddComponentsToNewEntities</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Registry.hpp" line="241" column="10" bodyfile="include/Registry.hpp" bodystart="241" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="classRegistry_1a38ad1525d112b05972abacad48a1505c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Registry::addComponentAdder</definition>
        <argsstring>(std::function&lt; void(entity_t, Registry &amp;)&gt; adder)</argsstring>
        <name>addComponentAdder</name>
        <qualifiedname>Registry::addComponentAdder</qualifiedname>
        <param>
          <type>std::function&lt; void(entity_t, <ref refid="classRegistry" kindref="compound">Registry</ref> &amp;)&gt;</type>
          <declname>adder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Registry.hpp" line="252" column="10" bodyfile="include/Registry.hpp" bodystart="252" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="classRegistry_1a4baf198a05a9487c9c340b7b924725db" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Registry::setPath</definition>
        <argsstring>(const std::string &amp;path)</argsstring>
        <name>setPath</name>
        <qualifiedname>Registry::setPath</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Registry.hpp" line="256" column="10" bodyfile="include/Registry.hpp" bodystart="256" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="classRegistry_1a187ada3c4ac645f134066c69e0ff2805" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Registry::getPath</definition>
        <argsstring>()</argsstring>
        <name>getPath</name>
        <qualifiedname>Registry::getPath</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Registry.hpp" line="260" column="17" bodyfile="include/Registry.hpp" bodystart="260" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="classRegistry_1a17bfb8145d9edc1fa96e6898a0e72443" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Registry::clearInactiveEntities</definition>
        <argsstring>()</argsstring>
        <name>clearInactiveEntities</name>
        <qualifiedname>Registry::clearInactiveEntities</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Registry.hpp" line="264" column="10" bodyfile="include/Registry.hpp" bodystart="264" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="classRegistry_1aa32444f364339ad0e846dcdf9d93213a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Registry::clearActiveEntities</definition>
        <argsstring>()</argsstring>
        <name>clearActiveEntities</name>
        <qualifiedname>Registry::clearActiveEntities</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Registry.hpp" line="273" column="10" bodyfile="include/Registry.hpp" bodystart="273" bodyend="275"/>
      </memberdef>
      <memberdef kind="function" id="classRegistry_1a8bbcbd8e934d8e426c3b909148c4cbfb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Registry::clearFreeIds</definition>
        <argsstring>()</argsstring>
        <name>clearFreeIds</name>
        <qualifiedname>Registry::clearFreeIds</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Registry.hpp" line="276" column="10" bodyfile="include/Registry.hpp" bodystart="276" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="classRegistry_1a6a3fbc54a3b269d96f9be2d44ec84e2b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Registry::clearEntityConstructors</definition>
        <argsstring>()</argsstring>
        <name>clearEntityConstructors</name>
        <qualifiedname>Registry::clearEntityConstructors</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Registry.hpp" line="279" column="10" bodyfile="include/Registry.hpp" bodystart="279" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="classRegistry_1a1453593ce65dc193ea032f30bfacea0c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Registry::clearEntityToCreate</definition>
        <argsstring>()</argsstring>
        <name>clearEntityToCreate</name>
        <qualifiedname>Registry::clearEntityToCreate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Registry.hpp" line="282" column="10" bodyfile="include/Registry.hpp" bodystart="282" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="classRegistry_1a3e3c40aac10ca3bf1c2ade27e5a01050" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Registry::clearForNewSong</definition>
        <argsstring>()</argsstring>
        <name>clearForNewSong</name>
        <qualifiedname>Registry::clearForNewSong</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Registry.hpp" line="286" column="10" bodyfile="include/Registry.hpp" bodystart="286" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="classRegistry_1ae1100ae788b9e52f04aef861b7bbe759" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Registry::clearGameState</definition>
        <argsstring>()</argsstring>
        <name>clearGameState</name>
        <qualifiedname>Registry::clearGameState</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Registry.hpp" line="297" column="10" bodyfile="include/Registry.hpp" bodystart="297" bodyend="311"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classRegistry_1a16d7911b4b45f078427ca075657fbc70" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Registry::run_systems_range</definition>
        <argsstring>(std::vector&lt; SystemFunction &gt;::iterator start, std::vector&lt; SystemFunction &gt;::iterator end)</argsstring>
        <name>run_systems_range</name>
        <qualifiedname>Registry::run_systems_range</qualifiedname>
        <param>
          <type>std::vector&lt; SystemFunction &gt;::iterator</type>
          <declname>start</declname>
        </param>
        <param>
          <type>std::vector&lt; SystemFunction &gt;::iterator</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Registry.hpp" line="331" column="10" bodyfile="include/Registry.hpp" bodystart="331" bodyend="337"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>EventBus</label>
        <link refid="classEventBus"/>
      </node>
      <node id="1">
        <label>Registry</label>
        <link refid="classRegistry"/>
        <childnode refid="2" relation="usage">
          <edgelabel>eventBus</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/Registry.hpp" line="38" column="1" bodyfile="include/Registry.hpp" bodystart="38" bodyend="338"/>
    <listofallmembers>
      <member refid="classRegistry_1ae30ac722dbeae902c384462237155f7d" prot="public" virt="non-virtual"><scope>Registry</scope><name>_active_entities</name></member>
      <member refid="classRegistry_1a3125d6a89a2474702c4d6b4ae9c6cd69" prot="private" virt="non-virtual"><scope>Registry</scope><name>_components_arrays</name></member>
      <member refid="classRegistry_1ab1bf016feb4218144bb4ebb7fe551e1e" prot="private" virt="non-virtual"><scope>Registry</scope><name>_entities_to_create</name></member>
      <member refid="classRegistry_1af56668d56e82d5ac6354a8b07e52f781" prot="private" virt="non-virtual"><scope>Registry</scope><name>_entities_to_delete</name></member>
      <member refid="classRegistry_1a3c755e3138615b24fe5e828958a5d393" prot="public" virt="non-virtual"><scope>Registry</scope><name>_entity_constructors</name></member>
      <member refid="classRegistry_1a33786f17ea0a22f87301edbcf2595695" prot="private" virt="non-virtual"><scope>Registry</scope><name>_eraser_functions</name></member>
      <member refid="classRegistry_1a854f2d937408abcd472a0212d5b6edac" prot="private" virt="non-virtual"><scope>Registry</scope><name>_free_ids</name></member>
      <member refid="classRegistry_1a64d16d19a51d39bf91d5cf11473d63d0" prot="public" virt="non-virtual"><scope>Registry</scope><name>_inactive_entities</name></member>
      <member refid="classRegistry_1ac1f3104c48ca115788fbc66d866485b6" prot="private" virt="non-virtual"><scope>Registry</scope><name>_newly_created_entities</name></member>
      <member refid="classRegistry_1ae42b534f08225c6ed097d0dbdff42b6e" prot="private" virt="non-virtual"><scope>Registry</scope><name>_next_id</name></member>
      <member refid="classRegistry_1a23730d886cb2d6bc04947b932785cd7a" prot="private" virt="non-virtual"><scope>Registry</scope><name>_system_instances</name></member>
      <member refid="classRegistry_1aab7c17d02faecab847dadd8d0186566d" prot="private" virt="non-virtual"><scope>Registry</scope><name>_systems</name></member>
      <member refid="classRegistry_1a90d1e87724c7a1b8fec3629a843e902f" prot="public" virt="non-virtual"><scope>Registry</scope><name>activate_entity</name></member>
      <member refid="classRegistry_1a2a72ec0e5b4cbe4c2f9494eb98d84afb" prot="public" virt="non-virtual"><scope>Registry</scope><name>add_component</name></member>
      <member refid="classRegistry_1a2b65cee6b96660f6c492cf577ccbb310" prot="public" virt="non-virtual"><scope>Registry</scope><name>add_system</name></member>
      <member refid="classRegistry_1a38ad1525d112b05972abacad48a1505c" prot="public" virt="non-virtual"><scope>Registry</scope><name>addComponentAdder</name></member>
      <member refid="classRegistry_1a862b19ed0e5821885888c11705fe74a2" prot="public" virt="non-virtual"><scope>Registry</scope><name>AddComponentsToNewEntities</name></member>
      <member refid="classRegistry_1aa32444f364339ad0e846dcdf9d93213a" prot="public" virt="non-virtual"><scope>Registry</scope><name>clearActiveEntities</name></member>
      <member refid="classRegistry_1a6a3fbc54a3b269d96f9be2d44ec84e2b" prot="public" virt="non-virtual"><scope>Registry</scope><name>clearEntityConstructors</name></member>
      <member refid="classRegistry_1a1453593ce65dc193ea032f30bfacea0c" prot="public" virt="non-virtual"><scope>Registry</scope><name>clearEntityToCreate</name></member>
      <member refid="classRegistry_1a3e3c40aac10ca3bf1c2ade27e5a01050" prot="public" virt="non-virtual"><scope>Registry</scope><name>clearForNewSong</name></member>
      <member refid="classRegistry_1a8bbcbd8e934d8e426c3b909148c4cbfb" prot="public" virt="non-virtual"><scope>Registry</scope><name>clearFreeIds</name></member>
      <member refid="classRegistry_1ae1100ae788b9e52f04aef861b7bbe759" prot="public" virt="non-virtual"><scope>Registry</scope><name>clearGameState</name></member>
      <member refid="classRegistry_1a17bfb8145d9edc1fa96e6898a0e72443" prot="public" virt="non-virtual"><scope>Registry</scope><name>clearInactiveEntities</name></member>
      <member refid="classRegistry_1abe77d2467689c326ee208e6296f4522b" prot="public" virt="non-virtual"><scope>Registry</scope><name>clientToEntityMap</name></member>
      <member refid="classRegistry_1a74afd837a5a8046b9201be46f00aec03" prot="private" virt="non-virtual"><scope>Registry</scope><name>component_adders</name></member>
      <member refid="classRegistry_1a04831eff336faa213791bdb14a190862" prot="public" virt="non-virtual"><scope>Registry</scope><name>create_queued_entities</name></member>
      <member refid="classRegistry_1aa429b8c11530102655561013ea5cd815" prot="public" virt="non-virtual"><scope>Registry</scope><name>deactivate_entity</name></member>
      <member refid="classRegistry_1a5526a14dea0c0a8927d8468548896158" prot="public" virt="non-virtual"><scope>Registry</scope><name>delete_queued_entities</name></member>
      <member refid="classRegistry_1a0d360d62ab695fe8c8fc367b9fe7ea67" prot="public" virt="non-virtual"><scope>Registry</scope><name>emplace_component</name></member>
      <member refid="classRegistry_1ac7886237a4856f5bd74110cdd7acdef9" prot="public" virt="non-virtual"><scope>Registry</scope><name>entity_from_index</name></member>
      <member refid="classRegistry_1a306834e38afd365230bb47f3a58ca683" prot="public" virt="non-virtual"><scope>Registry</scope><name>eventBus</name></member>
      <member refid="classRegistry_1a6de44ffca6e12a0f879932ca541ba95b" prot="public" virt="non-virtual"><scope>Registry</scope><name>gameStates</name></member>
      <member refid="classRegistry_1a9bd59de84cb86995d3dddf31f706938b" prot="public" virt="non-virtual"><scope>Registry</scope><name>get_components</name></member>
      <member refid="classRegistry_1a706a223fe2432a6344565bb4fa7f4c8e" prot="public" virt="non-virtual"><scope>Registry</scope><name>get_components</name></member>
      <member refid="classRegistry_1a9982cdeaae9322564b09d27b68067462" prot="public" virt="non-virtual"><scope>Registry</scope><name>get_newly_created_entities</name></member>
      <member refid="classRegistry_1a187ada3c4ac645f134066c69e0ff2805" prot="public" virt="non-virtual"><scope>Registry</scope><name>getPath</name></member>
      <member refid="classRegistry_1ae1bc4e1ff64aac0d4657386dade88dca" prot="public" virt="non-virtual"><scope>Registry</scope><name>kill_entity</name></member>
      <member refid="classRegistry_1a525fda0dbd380314240f491b42f136b9" prot="private" virt="non-virtual"><scope>Registry</scope><name>path_to_music</name></member>
      <member refid="classRegistry_1a4f7d1c8d95cf6aca7a89b8a57554fde7" prot="public" virt="non-virtual"><scope>Registry</scope><name>queue_for_creation</name></member>
      <member refid="classRegistry_1a32ee090d426abf81188dcf616befbd31" prot="public" virt="non-virtual"><scope>Registry</scope><name>queue_for_creation</name></member>
      <member refid="classRegistry_1a9802fa44d67c082a2605b4dc0f488355" prot="public" virt="non-virtual"><scope>Registry</scope><name>queue_for_deletion</name></member>
      <member refid="classRegistry_1a5397b38d1643c5dee4114d20190baf50" prot="public" virt="non-virtual"><scope>Registry</scope><name>register_component</name></member>
      <member refid="classRegistry_1acb15d8aa051bf36ea92a86ee6c00bc3c" prot="public" virt="non-virtual"><scope>Registry</scope><name>Registry</name></member>
      <member refid="classRegistry_1a8af690a38f4982d9479401e7c69c33d2" prot="public" virt="non-virtual"><scope>Registry</scope><name>remove_component</name></member>
      <member refid="classRegistry_1ae81e0e64ea97ad040fe418cf041f14a7" prot="public" virt="non-virtual"><scope>Registry</scope><name>run_draw_system</name></member>
      <member refid="classRegistry_1a007f79c28713d4b9dfd3c186d91175d7" prot="public" virt="non-virtual"><scope>Registry</scope><name>run_fft_system</name></member>
      <member refid="classRegistry_1a15a6de78dc2259220850e60b540148aa" prot="public" virt="non-virtual"><scope>Registry</scope><name>run_systems</name></member>
      <member refid="classRegistry_1a16d7911b4b45f078427ca075657fbc70" prot="private" virt="non-virtual"><scope>Registry</scope><name>run_systems_range</name></member>
      <member refid="classRegistry_1a4baf198a05a9487c9c340b7b924725db" prot="public" virt="non-virtual"><scope>Registry</scope><name>setPath</name></member>
      <member refid="classRegistry_1ad81bdeebc99ce487b6a2b667d4e49674" prot="public" virt="non-virtual"><scope>Registry</scope><name>spawn_entity</name></member>
      <member refid="classRegistry_1a5da35cc9245855170c25f75637b61fe0" prot="public" virt="non-virtual"><scope>Registry</scope><name>spawnInactivedEntity</name></member>
      <member refid="classRegistry_1a99251f8a9d29a77cec2a59cd27109e92" prot="private" virt="non-virtual"><scope>Registry</scope><name>SystemFunction</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
