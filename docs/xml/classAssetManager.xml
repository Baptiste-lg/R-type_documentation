<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="classAssetManager" kind="class" language="C++" prot="public">
    <compoundname>AssetManager</compoundname>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classAssetManager_1a4602f08ea26e30dd391bad0560edce7d" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; std::string, sf::Texture &gt;</type>
        <definition>std::unordered_map&lt;std::string, sf::Texture&gt; AssetManager::textures</definition>
        <argsstring></argsstring>
        <name>textures</name>
        <qualifiedname>AssetManager::textures</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TextureManager.hpp" line="93" column="24" bodyfile="include/TextureManager.hpp" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAssetManager_1aae30bd0d80b436d69e1cf8456cc92d8f" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; std::string, int &gt;</type>
        <definition>std::unordered_map&lt;std::string, int&gt; AssetManager::textureRefCount</definition>
        <argsstring></argsstring>
        <name>textureRefCount</name>
        <qualifiedname>AssetManager::textureRefCount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TextureManager.hpp" line="94" column="24" bodyfile="include/TextureManager.hpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAssetManager_1af6a454e6da3ec9d480002db8ba7b0661" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; std::string, sf::SoundBuffer &gt;</type>
        <definition>std::unordered_map&lt;std::string, sf::SoundBuffer&gt; AssetManager::sounds</definition>
        <argsstring></argsstring>
        <name>sounds</name>
        <qualifiedname>AssetManager::sounds</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TextureManager.hpp" line="96" column="24" bodyfile="include/TextureManager.hpp" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAssetManager_1aa3fdbd68e47458d0eda75292dbda3cb3" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; std::string, int &gt;</type>
        <definition>std::unordered_map&lt;std::string, int&gt; AssetManager::soundRefCount</definition>
        <argsstring></argsstring>
        <name>soundRefCount</name>
        <qualifiedname>AssetManager::soundRefCount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TextureManager.hpp" line="97" column="24" bodyfile="include/TextureManager.hpp" bodystart="97" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classAssetManager_1aba5c8d6bc8d7017757257404c9bf01c9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classAssetManager" kindref="compound">AssetManager</ref> &amp;</type>
        <definition>static AssetManager &amp; AssetManager::Instance</definition>
        <argsstring>()</argsstring>
        <name>Instance</name>
        <qualifiedname>AssetManager::Instance</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TextureManager.hpp" line="13" column="25" bodyfile="include/TextureManager.hpp" bodystart="13" bodyend="16"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classAssetManager_1a1ae7fc277ad08a5a48a209f1a1e47e4d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>sf::Texture &amp;</type>
        <definition>sf::Texture &amp; AssetManager::GetTexture</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>GetTexture</name>
        <qualifiedname>AssetManager::GetTexture</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TextureManager.hpp" line="18" column="17" bodyfile="include/TextureManager.hpp" bodystart="18" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classAssetManager_1a7d21ac53a4187a7dcc7de54efbd08f4c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void AssetManager::LoadTexture</definition>
        <argsstring>(const std::string &amp;name, const std::string &amp;filename)</argsstring>
        <name>LoadTexture</name>
        <qualifiedname>AssetManager::LoadTexture</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TextureManager.hpp" line="28" column="10" bodyfile="include/TextureManager.hpp" bodystart="28" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classAssetManager_1ab915d185257218171bb2960942477ad1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void AssetManager::UnloadTexture</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>UnloadTexture</name>
        <qualifiedname>AssetManager::UnloadTexture</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TextureManager.hpp" line="38" column="10" bodyfile="include/TextureManager.hpp" bodystart="38" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classAssetManager_1a666f8641bfa2ef97746ba59daafaadac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void AssetManager::UnloadAllTextures</definition>
        <argsstring>()</argsstring>
        <name>UnloadAllTextures</name>
        <qualifiedname>AssetManager::UnloadAllTextures</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TextureManager.hpp" line="43" column="10" bodyfile="include/TextureManager.hpp" bodystart="43" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classAssetManager_1aee79d4f7ecf1eea6462248e80f193dda" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>sf::SoundBuffer &amp;</type>
        <definition>sf::SoundBuffer &amp; AssetManager::GetSound</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>GetSound</name>
        <qualifiedname>AssetManager::GetSound</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TextureManager.hpp" line="48" column="21" bodyfile="include/TextureManager.hpp" bodystart="48" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classAssetManager_1a6096a299d1a3d5f2075f2eed95dcb726" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void AssetManager::LoadSound</definition>
        <argsstring>(const std::string &amp;name, const std::string &amp;filename)</argsstring>
        <name>LoadSound</name>
        <qualifiedname>AssetManager::LoadSound</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TextureManager.hpp" line="58" column="10" bodyfile="include/TextureManager.hpp" bodystart="58" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classAssetManager_1ae357c1ef41ea94507f9a569e41f66b22" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void AssetManager::UnloadSound</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>UnloadSound</name>
        <qualifiedname>AssetManager::UnloadSound</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TextureManager.hpp" line="70" column="10" bodyfile="include/TextureManager.hpp" bodystart="70" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classAssetManager_1ae8bc39571a03fde82cd6effcbd58112d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void AssetManager::UnloadAllSounds</definition>
        <argsstring>()</argsstring>
        <name>UnloadAllSounds</name>
        <qualifiedname>AssetManager::UnloadAllSounds</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TextureManager.hpp" line="76" column="10" bodyfile="include/TextureManager.hpp" bodystart="76" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classAssetManager_1a3b4366a1dbaa9bbe4e9b62cc3772c3bc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void AssetManager::PreloadTextures</definition>
        <argsstring>(const std::vector&lt; std::string &gt; &amp;textureNames)</argsstring>
        <name>PreloadTextures</name>
        <qualifiedname>AssetManager::PreloadTextures</qualifiedname>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>textureNames</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TextureManager.hpp" line="81" column="10" bodyfile="include/TextureManager.hpp" bodystart="81" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classAssetManager_1a65c29fcd5643571f388a07fde32fc1c0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void AssetManager::PreloadSounds</definition>
        <argsstring>(const std::vector&lt; std::string &gt; &amp;soundNames)</argsstring>
        <name>PreloadSounds</name>
        <qualifiedname>AssetManager::PreloadSounds</qualifiedname>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>soundNames</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TextureManager.hpp" line="87" column="10" bodyfile="include/TextureManager.hpp" bodystart="87" bodyend="89"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classAssetManager_1a48938b146fa7ad19270a11be5363472a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>AssetManager::AssetManager</definition>
        <argsstring>()=default</argsstring>
        <name>AssetManager</name>
        <qualifiedname>AssetManager::AssetManager</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/TextureManager.hpp" line="92" column="5"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/TextureManager.hpp" line="11" column="1" bodyfile="include/TextureManager.hpp" bodystart="11" bodyend="98"/>
    <listofallmembers>
      <member refid="classAssetManager_1a48938b146fa7ad19270a11be5363472a" prot="private" virt="non-virtual"><scope>AssetManager</scope><name>AssetManager</name></member>
      <member refid="classAssetManager_1aee79d4f7ecf1eea6462248e80f193dda" prot="public" virt="non-virtual"><scope>AssetManager</scope><name>GetSound</name></member>
      <member refid="classAssetManager_1a1ae7fc277ad08a5a48a209f1a1e47e4d" prot="public" virt="non-virtual"><scope>AssetManager</scope><name>GetTexture</name></member>
      <member refid="classAssetManager_1aba5c8d6bc8d7017757257404c9bf01c9" prot="public" virt="non-virtual"><scope>AssetManager</scope><name>Instance</name></member>
      <member refid="classAssetManager_1a6096a299d1a3d5f2075f2eed95dcb726" prot="public" virt="non-virtual"><scope>AssetManager</scope><name>LoadSound</name></member>
      <member refid="classAssetManager_1a7d21ac53a4187a7dcc7de54efbd08f4c" prot="public" virt="non-virtual"><scope>AssetManager</scope><name>LoadTexture</name></member>
      <member refid="classAssetManager_1a65c29fcd5643571f388a07fde32fc1c0" prot="public" virt="non-virtual"><scope>AssetManager</scope><name>PreloadSounds</name></member>
      <member refid="classAssetManager_1a3b4366a1dbaa9bbe4e9b62cc3772c3bc" prot="public" virt="non-virtual"><scope>AssetManager</scope><name>PreloadTextures</name></member>
      <member refid="classAssetManager_1aa3fdbd68e47458d0eda75292dbda3cb3" prot="private" virt="non-virtual"><scope>AssetManager</scope><name>soundRefCount</name></member>
      <member refid="classAssetManager_1af6a454e6da3ec9d480002db8ba7b0661" prot="private" virt="non-virtual"><scope>AssetManager</scope><name>sounds</name></member>
      <member refid="classAssetManager_1aae30bd0d80b436d69e1cf8456cc92d8f" prot="private" virt="non-virtual"><scope>AssetManager</scope><name>textureRefCount</name></member>
      <member refid="classAssetManager_1a4602f08ea26e30dd391bad0560edce7d" prot="private" virt="non-virtual"><scope>AssetManager</scope><name>textures</name></member>
      <member refid="classAssetManager_1ae8bc39571a03fde82cd6effcbd58112d" prot="public" virt="non-virtual"><scope>AssetManager</scope><name>UnloadAllSounds</name></member>
      <member refid="classAssetManager_1a666f8641bfa2ef97746ba59daafaadac" prot="public" virt="non-virtual"><scope>AssetManager</scope><name>UnloadAllTextures</name></member>
      <member refid="classAssetManager_1ae357c1ef41ea94507f9a569e41f66b22" prot="public" virt="non-virtual"><scope>AssetManager</scope><name>UnloadSound</name></member>
      <member refid="classAssetManager_1ab915d185257218171bb2960942477ad1" prot="public" virt="non-virtual"><scope>AssetManager</scope><name>UnloadTexture</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
