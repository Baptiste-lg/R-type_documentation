<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="Event_8hpp" kind="file" language="C++">
    <compoundname>Event.hpp</compoundname>
    <includes local="no">functional</includes>
    <includes local="no">iostream</includes>
    <includedby refid="Registry_8hpp" local="yes">include/Registry.hpp</includedby>
    <includedby refid="Event_8cpp" local="yes">src/Event.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>include/Event.hpp</label>
        <link refid="Event_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>functional</label>
      </node>
      <node id="3">
        <label>iostream</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>include/Behaviour.hpp</label>
        <link refid="Behaviour_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>include/ClientMain.hpp</label>
        <link refid="ClientMain_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>include/Component.hpp</label>
        <link refid="Component_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/Event.hpp</label>
        <link refid="Event_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>include/ISystem.hpp</label>
        <link refid="ISystem_8hpp_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>include/Quadtree.hpp</label>
        <link refid="Quadtree_8hpp_source"/>
      </node>
      <node id="2">
        <label>include/Registry.hpp</label>
        <link refid="Registry_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>include/SceneParsing.hpp</label>
        <link refid="SceneParsing_8hpp_source"/>
      </node>
      <node id="6">
        <label>include/ServerMain.hpp</label>
        <link refid="ServerMain_8hpp_source"/>
      </node>
      <node id="5">
        <label>include/Spawner.hpp</label>
        <link refid="Spawner_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>include/System.hpp</label>
        <link refid="System_8hpp_source"/>
      </node>
      <node id="12">
        <label>include/Zipper.hpp</label>
        <link refid="Zipper_8hpp_source"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>include/ZipperIterator.hpp</label>
        <link refid="ZipperIterator_8hpp_source"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>include/taskLoader.hpp</label>
        <link refid="taskLoader_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structEvent" prot="public">Event</innerclass>
    <innerclass refid="classEventBus" prot="public">EventBus</innerclass>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="Event_8hpp_1a2628ea8d12e8b2563c32f05dc7fff6fa" prot="public" static="no" strong="no">
        <type></type>
        <name>EventType</name>
        <enumvalue id="Event_8hpp_1a2628ea8d12e8b2563c32f05dc7fff6faa36152d1419a93ac6662f5212ee011c63" prot="public">
          <name>PlayerDied</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="Event_8hpp_1a2628ea8d12e8b2563c32f05dc7fff6faae9a2a9f2cc3931cbe6b1f30bc2455cde" prot="public">
          <name>ItemPicked</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="Event_8hpp_1a2628ea8d12e8b2563c32f05dc7fff6faabc8aa93705ed47ba48409ae63e7a0ec7" prot="public">
          <name>PlayerJoined</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="Event_8hpp_1a2628ea8d12e8b2563c32f05dc7fff6faaad55f505c29b848da8a5cd2dd1ba1c55" prot="public">
          <name>PlayerLeft</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="Event_8hpp_1a2628ea8d12e8b2563c32f05dc7fff6faa92c8d02a142edf3d6908880f19f0d6c3" prot="public">
          <name>PlayerMoved</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="Event_8hpp_1a2628ea8d12e8b2563c32f05dc7fff6faac548d490124467aa0fb5ff156e57f427" prot="public">
          <name>PlayerFired</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="Event_8hpp_1a2628ea8d12e8b2563c32f05dc7fff6faad1710b72e24fb35d67171a196c03675d" prot="public">
          <name>PlayerHit</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="Event_8hpp_1a2628ea8d12e8b2563c32f05dc7fff6faac48c4fec82d674effc77e1d07957d796" prot="public">
          <name>PlayerRespawned</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="Event_8hpp_1a2628ea8d12e8b2563c32f05dc7fff6faa88efaaa0d2ff799f170b741ba77fe339" prot="public">
          <name>PlayerScored</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="Event_8hpp_1a2628ea8d12e8b2563c32f05dc7fff6faa7c964e487fa2891c6bf2727fef865e25" prot="public">
          <name>PlayerWon</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="Event_8hpp_1a2628ea8d12e8b2563c32f05dc7fff6faa29ea1bafa8487d55b028ecea7206d095" prot="public">
          <name>PlayerLost</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="Event_8hpp_1a2628ea8d12e8b2563c32f05dc7fff6faa7c7eac73fbe323cd797c876a24027350" prot="public">
          <name>PlayerDisconnected</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="Event_8hpp_1a2628ea8d12e8b2563c32f05dc7fff6faa1496016da96ca3d5dee867fc94078c62" prot="public">
          <name>PlayerReconnected</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="Event_8hpp_1a2628ea8d12e8b2563c32f05dc7fff6faafb9975f3a314bcd1e71871c92c36660c" prot="public">
          <name>PlayerRejoined</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="Event_8hpp_1a2628ea8d12e8b2563c32f05dc7fff6faa97ea969baf37dede214b2b2d1c08b96a" prot="public">
          <name>PlayerKicked</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="Event_8hpp_1a2628ea8d12e8b2563c32f05dc7fff6faab0693751163a5ab5c9fcfcb322aba6a5" prot="public">
          <name>PlayerBanned</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="Event_8hpp_1a2628ea8d12e8b2563c32f05dc7fff6faa9bf96404a257c6c601a12e4573d3805b" prot="public">
          <name>PlayerUnbanned</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Event.hpp" line="15" column="1" bodyfile="include/Event.hpp" bodystart="15" bodyend="34"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="Event_8hpp_1a88dc5c53f4ea2b68d0fb9d3f3e4fef4a" prot="public" static="no">
        <type>std::function&lt; void(const <ref refid="structEvent" kindref="compound">Event</ref> &amp;)&gt;</type>
        <definition>using Listener =  std::function&lt;void(const Event&amp;)&gt;</definition>
        <argsstring></argsstring>
        <name>Listener</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Event.hpp" line="62" column="1" bodyfile="include/Event.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="Event_8hpp_1ae7dcd9f79a0c5e61f06236c238911ad3" prot="public" static="no" mutable="no">
        <type>const std::unordered_map&lt; std::string, EventType &gt;</type>
        <definition>const std::unordered_map&lt;std::string, EventType&gt; eventIdentifierMap</definition>
        <argsstring></argsstring>
        <name>eventIdentifierMap</name>
        <initializer>= {
        {&quot;PD&quot;, PlayerDied},
        {&quot;IP&quot;, ItemPicked},
        {&quot;PJ&quot;, PlayerJoined},
        {&quot;PL&quot;, PlayerLeft},
        {&quot;PM&quot;, PlayerMoved},
        {&quot;PF&quot;, PlayerFired},
        {&quot;PH&quot;, PlayerHit},
        {&quot;PR&quot;, PlayerRespawned},
        {&quot;PS&quot;, PlayerScored},
        {&quot;PW&quot;, PlayerWon},
        {&quot;PL&quot;, PlayerLost},
        {&quot;PDC&quot;, PlayerDisconnected},
        {&quot;PRC&quot;, PlayerReconnected},
        {&quot;PRJ&quot;, PlayerRejoined},
        {&quot;PK&quot;, PlayerKicked},
        {&quot;PB&quot;, PlayerBanned},
        {&quot;PU&quot;, PlayerUnbanned}
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Event.hpp" line="36" column="26" bodyfile="include/Event.hpp" bodystart="36" bodyend="54"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="Event_8hpp_1adcb92cd1192a3e7276ccbf1d68152975" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EventType</type>
        <definition>EventType parseEventType</definition>
        <argsstring>(const std::string &amp;eventIdentifier)</argsstring>
        <name>parseEventType</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>eventIdentifier</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Event.hpp" line="82" column="11" bodyfile="src/Event.cpp" bodystart="3" bodyend="5" declfile="include/Event.hpp" declline="82" declcolumn="11"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">**<sp/>EPITECH<sp/>PROJECT,<sp/>2024</highlight></codeline>
<codeline lineno="3"><highlight class="comment">**<sp/>ECS</highlight></codeline>
<codeline lineno="4"><highlight class="comment">**<sp/>File<sp/>description:</highlight></codeline>
<codeline lineno="5"><highlight class="comment">**<sp/>Event</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>EVENT_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EVENT_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>EventType<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>PlayerDied,</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>ItemPicked,</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>PlayerJoined,</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>PlayerLeft,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>PlayerMoved,</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>PlayerFired,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>PlayerHit,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>PlayerRespawned,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>PlayerScored,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>PlayerWon,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>PlayerLost,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>PlayerDisconnected,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>PlayerReconnected,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>PlayerRejoined,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>PlayerKicked,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>PlayerBanned,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>PlayerUnbanned</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>more<sp/>event<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal">};</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;std::string,<sp/>EventType&gt;<sp/>eventIdentifierMap<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;PD&quot;</highlight><highlight class="normal">,<sp/>PlayerDied},</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;IP&quot;</highlight><highlight class="normal">,<sp/>ItemPicked},</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;PJ&quot;</highlight><highlight class="normal">,<sp/>PlayerJoined},</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;PL&quot;</highlight><highlight class="normal">,<sp/>PlayerLeft},</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;PM&quot;</highlight><highlight class="normal">,<sp/>PlayerMoved},</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;PF&quot;</highlight><highlight class="normal">,<sp/>PlayerFired},</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;PH&quot;</highlight><highlight class="normal">,<sp/>PlayerHit},</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;PR&quot;</highlight><highlight class="normal">,<sp/>PlayerRespawned},</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;PS&quot;</highlight><highlight class="normal">,<sp/>PlayerScored},</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;PW&quot;</highlight><highlight class="normal">,<sp/>PlayerWon},</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;PL&quot;</highlight><highlight class="normal">,<sp/>PlayerLost},</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;PDC&quot;</highlight><highlight class="normal">,<sp/>PlayerDisconnected},</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;PRC&quot;</highlight><highlight class="normal">,<sp/>PlayerReconnected},</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;PRJ&quot;</highlight><highlight class="normal">,<sp/>PlayerRejoined},</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;PK&quot;</highlight><highlight class="normal">,<sp/>PlayerKicked},</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;PB&quot;</highlight><highlight class="normal">,<sp/>PlayerBanned},</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;PU&quot;</highlight><highlight class="normal">,<sp/>PlayerUnbanned}</highlight></codeline>
<codeline lineno="54"><highlight class="normal">};</highlight></codeline>
<codeline lineno="55" refid="structEvent" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structEvent" kindref="compound">Event</ref><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>EventType<sp/>type;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>content;<sp/></highlight><highlight class="comment">//<sp/>event-specific<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>clientID;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>more<sp/>event-specific<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal">};</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Listener<sp/>=<sp/>std::function&lt;void(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structEvent" kindref="compound">Event</ref>&amp;)&gt;;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="classEventBus" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classEventBus" kindref="compound">EventBus</ref><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unordered_map&lt;EventType,<sp/>std::vector&lt;Listener&gt;&gt;<sp/>listeners;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addListener(EventType<sp/>type,<sp/>Listener<sp/>listener)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Listener<sp/>added<sp/>for<sp/>event<sp/>type:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(type)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>listeners[type].push_back(listener);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fireEvent(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structEvent" kindref="compound">Event</ref>&amp;<sp/>event)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Firing<sp/>event<sp/>of<sp/>type:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">event</highlight><highlight class="normal">.type)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>listener<sp/>:<sp/>listeners[</highlight><highlight class="keyword">event</highlight><highlight class="normal">.type])<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>listener(event);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal">};</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal">EventType<sp/>parseEventType(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>eventIdentifier);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>!EVENT_HPP_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/Event.hpp"/>
  </compounddef>
</doxygen>
